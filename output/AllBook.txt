/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/bin/java -javaagent:/Applications/IntelliJ IDEA CE.app/Contents/lib/idea_rt.jar=58634:/Applications/IntelliJ IDEA CE.app/Contents/bin -Dfile.encoding=UTF-8 -classpath /Users/Stefano/Documents/GitHub/ScalaForTheImpatient/target/scala-2.12/classes:/Users/Stefano/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.12.14/scala-library-2.12.14.jar:/Users/Stefano/Documents/GitHub/ScalaForTheImpatient/lib/hamcrest-core-1.3-javadoc.jar:/Users/Stefano/Documents/GitHub/ScalaForTheImpatient/lib/hamcrest-core-1.3-sources.jar:/Users/Stefano/Documents/GitHub/ScalaForTheImpatient/lib/hamcrest-core-1.3.jar:/Users/Stefano/Documents/GitHub/ScalaForTheImpatient/lib/junit-4.12-javadoc.jar:/Users/Stefano/Documents/GitHub/ScalaForTheImpatient/lib/junit-4.12-sources.jar:/Users/Stefano/Documents/GitHub/ScalaForTheImpatient/lib/junit-4.12.jar com.stefperf.impatient.AllBook
========================================================================================================================
=== Chapter 1. The Basics ==============================================================================================

Most exercises of this chapter are skipped here as they are just theory questions or REPL exercises.

--- Chapter 1 Exercise 2 -----------------------------------------------------------------------------------------------
3 - (3 ^ 0.5) ^ 2 = 4.440892098500626E-16

--- Chapter 1 Exercise 6 -----------------------------------------------------------------------------------------------
2 ^1024 = 179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137216

--- Chapter 1 Exercise 7 -----------------------------------------------------------------------------------------------
923160189137134746019820901649

--- Chapter 1 Exercise 8 -----------------------------------------------------------------------------------------------
10 random charachers in range [a-z0-9]: pxi8d6cjhd

--- Chapter 1 Exercise 9 -----------------------------------------------------------------------------------------------
First and last characters of string 'Hello!': 'H', '!'



========================================================================================================================
=== Chapter 2. Control Structures and Functions ========================================================================

--- Chapter 2 Exercise 1 -----------------------------------------------------------------------------------------------
0

--- Chapter 2 Exercises 4, 5 together ----------------------------------------------------------------------------------
10
9
8
7
6
5
4
3
2
1
0

--- Chapter 2 Exercise 6 -----------------------------------------------------------------------------------------------
9415087488

--- Chapter 2 Exercises 7, 8 together ----------------------------------------------------------------------------------
9415087488

--- Chapter 2 Exercise 9 -----------------------------------------------------------------------------------------------
9415087488

--- Chapter 2 Exercise 10 ----------------------------------------------------------------------------------------------
(2.718281828459045,0.25,1000.0)

--- Chapter 2 Exercise 11 ----------------------------------------------------------------------------------------------
2021-09-25




========================================================================================================================
=== Chapter 3. Working with Arrays =====================================================================================

--- Chapter 3 Exercise 1 -----------------------------------------------------------------------------------------------
(1, 1, 2)
(6, 5, 5, 1, 5, 6, 0, 0)

--- Chapter 3 Exercise 2 -----------------------------------------------------------------------------------------------
(2, 1, 4, 3, 5)

--- Chapter 3 Exercise 3 -----------------------------------------------------------------------------------------------
(2, 1, 4, 3, 5)
(2, 1, 4, 3, 5)

--- Chapter 3 Exercise 4 -----------------------------------------------------------------------------------------------
(4, 5, 4, 2, 0, -2, -7, -1, -1, -7)

--- Chapter 3 Exercise 5 -----------------------------------------------------------------------------------------------
27.75

--- Chapter 3 Exercise 6 -----------------------------------------------------------------------------------------------
(5, 4, 3, 2, 1)
(5, 4, 3, 2, 1)
(5, 4, 3, 2, 1)
(5, 4, 3, 2, 1)

--- Chapter 3 Exercise 7 -----------------------------------------------------------------------------------------------
(2, 1, 1, 1, 1, 2, 4, 3, 5, 5, 3, 0, 2, 5, 0, 1, 2, 1, 0, 3)
(2, 1, 4, 3, 5, 0)

--- Chapter 3 Exercise 8 -----------------------------------------------------------------------------------------------
(4, 2, -3, -6, 6, 7, -5)
(4, 2, -3, 6, 7)

--- Chapter 3 Exercise 9 -----------------------------------------------------------------------------------------------
(4, 2, -3, -6, 6, 7, -5) => (4, 2, -3, 6, 7, 7, -5)
() => ()
(-1, -2, -3, -4) => (-1, -2, -3, -4)
(1, 2, 3, 4) => (1, 2, 3, 4)
(1, 2, 3, -4, -5) => (1, 2, 3, -4, -5)
(-1, -2, -3, 4, 5) => (-1, 4, 5, 4, 5)

--- Chapter 3 Exercise 10 ----------------------------------------------------------------------------------------------
Adak
Anchorage
Anguilla
Antigua
Araguaina
Argentina/Buenos_Aires
Argentina/Catamarca
Argentina/ComodRivadavia
Argentina/Cordoba
Argentina/Jujuy
Argentina/La_Rioja
Argentina/Mendoza
Argentina/Rio_Gallegos
Argentina/Salta
Argentina/San_Juan
Argentina/San_Luis
Argentina/Tucuman
Argentina/Ushuaia
Aruba
Asuncion
Atikokan
Atka
Bahia
Bahia_Banderas
Barbados
Belem
Belize
Blanc-Sablon
Boa_Vista
Bogota
Boise
Buenos_Aires
Cambridge_Bay
Campo_Grande
Cancun
Caracas
Catamarca
Cayenne
Cayman
Chicago
Chihuahua
Coral_Harbour
Cordoba
Costa_Rica
Creston
Cuiaba
Curacao
Danmarkshavn
Dawson
Dawson_Creek
Denver
Detroit
Dominica
Edmonton
Eirunepe
El_Salvador
Ensenada
Fort_Nelson
Fort_Wayne
Fortaleza
Glace_Bay
Godthab
Goose_Bay
Grand_Turk
Grenada
Guadeloupe
Guatemala
Guayaquil
Guyana
Halifax
Havana
Hermosillo
Indiana/Indianapolis
Indiana/Knox
Indiana/Marengo
Indiana/Petersburg
Indiana/Tell_City
Indiana/Vevay
Indiana/Vincennes
Indiana/Winamac
Indianapolis
Inuvik
Iqaluit
Jamaica
Jujuy
Juneau
Kentucky/Louisville
Kentucky/Monticello
Knox_IN
Kralendijk
La_Paz
Lima
Los_Angeles
Louisville
Lower_Princes
Maceio
Managua
Manaus
Marigot
Martinique
Matamoros
Mazatlan
Mendoza
Menominee
Merida
Metlakatla
Mexico_City
Miquelon
Moncton
Monterrey
Montevideo
Montreal
Montserrat
Nassau
New_York
Nipigon
Nome
Noronha
North_Dakota/Beulah
North_Dakota/Center
North_Dakota/New_Salem
Nuuk
Ojinaga
Panama
Pangnirtung
Paramaribo
Phoenix
Port-au-Prince
Port_of_Spain
Porto_Acre
Porto_Velho
Puerto_Rico
Punta_Arenas
Rainy_River
Rankin_Inlet
Recife
Regina
Resolute
Rio_Branco
Rosario
Santa_Isabel
Santarem
Santiago
Santo_Domingo
Sao_Paulo
Scoresbysund
Shiprock
Sitka
St_Barthelemy
St_Johns
St_Kitts
St_Lucia
St_Thomas
St_Vincent
Swift_Current
Tegucigalpa
Thule
Thunder_Bay
Tijuana
Toronto
Tortola
US/Alaska
US/Aleutian
US/Arizona
US/Central
US/East-Indiana
US/Eastern
US/Hawaii
US/Indiana-Starke
US/Michigan
US/Mountain
US/Pacific
US/Samoa
Vancouver
Virgin
Whitehorse
Winnipeg
Yakutat
Yellowknife

--- Chapter 3 Exercise 11 ----------------------------------------------------------------------------------------------
val nativesForImageFlavor = Map[DataFlavor, String](
  (java.awt.datatransfer.DataFlavor[mimetype=image/x-java-image;representationclass=java.awt.Image] => PNG)
)



========================================================================================================================
=== Chapter 4. Maps and Tuples =========================================================================================

--- Chapter 4 Exercise 1 -----------------------------------------------------------------------------------------------
discountedPRices =
(
  (product1 => 90.0),
  (product2 => 180.0),
  (product3 => 44.99),
  (product4 => 17999.91)
)

--- Chapter 4 Exercise 2 -----------------------------------------------------------------------------------------------
Top 5 most frequent 'words' in this file:
(
  (word => 32),
  (val => 30),
  (wordCounts => 17),
  (in => 16),
  (Int => 15)
)

--- Chapter 4 Exercise 3 -----------------------------------------------------------------------------------------------
Top 5 most frequent 'words' in this file:
(
  (word => 32),
  (val => 30),
  (wordCounts => 17),
  (in => 16),
  (println => 15)
)

--- Chapter 4 Exercise 4 -----------------------------------------------------------------------------------------------
(
  (Array => 4),
  (Boolean => 2),
  (Calendar => 8),
  (Chapter => 6),
  (Char => 1),
  (Double => 1),
  (FRIDAY => 1),
  (File => 4),
  (Friday => 1),
  (Hello => 4),
  (Int => 15),
  (JavaConverters => 2),
  (LinkedHashMap => 1),
  (ListMap => 2),
  (MONDAY => 1),
  (Map => 6),
  (Maps => 1),
  (Monday => 1),
  (SATURDAY => 1),
  (SUNDAY => 1),
  (Saturday => 1),
  (Scanner => 4),
  (SortedMap => 1),
  (Stefano => 1),
  (String => 13),
  (Sunday => 1),
  (System => 1),
  (THURSDAY => 1),
  (TUESDAY => 1),
  (Thursday => 1),
  (Top => 2),
  (TreeMap => 1),
  (Tuesday => 1),
  (Tuples => 1),
  (Unit => 1),
  (Use => 1),
  (WEDNESDAY => 1),
  (Wednesday => 1),
  (Words => 3),
  (World => 1),
  (Z => 4),
  (a => 4),
  (and => 6),
  (arr => 6),
  (array => 2),
  (arrmax => 4),
  (arrmin => 4),
  (as => 1),
  (asScala => 2),
  (at => 1),
  (case => 4),
  (caseSensitive => 6),
  (chapter => 5),
  (charAggregate => 8),
  (collection => 5),
  (com => 6),
  (contain => 1),
  (counts => 1),
  (cs => 4),
  (def => 5),
  (discountPerc => 2),
  (discountedPRices => 1),
  (discountedPrices => 2),
  (drop => 1),
  (element => 1),
  (else => 5),
  (eq => 3),
  (equal => 1),
  (exercise => 10),
  (exercises => 1),
  (extends => 1),
  (f => 9),
  (false => 2),
  (file => 2),
  (findAllMatchIn => 4),
  (findOverlaps => 2),
  (finding => 1),
  (for => 10),
  (foreach => 1),
  (frequent => 2),
  (fullPrices => 2),
  (get => 1),
  (getOrElse => 4),
  (getProperties => 1),
  (greater => 1),
  (gt => 3),
  (hasNext => 4),
  (have => 3),
  (hollow => 2),
  (i => 2),
  (if => 11),
  (immutable => 4),
  (impatient => 6),
  (import => 5),
  (in => 16),
  (io => 4),
  (isEmpty => 1),
  (java => 10),
  (k => 7),
  (keys => 1),
  (largest => 1),
  (least => 1),
  (length => 3),
  (less => 1),
  (let => 5),
  (letter => 7),
  (letters => 1),
  (line => 2),
  (lt => 3),
  (lteqgt => 2),
  (main => 4),
  (map => 4),
  (max => 2),
  (maxNameLength => 4),
  (min => 1),
  (minmax => 2),
  (most => 2),
  (must => 1),
  (mutable => 5),
  (n => 8),
  (new => 9),
  (next => 4),
  (no => 1),
  (nr => 1),
  (object => 1),
  (of => 1),
  (or => 1),
  (overlap => 2),
  (overlapping => 1),
  (overlaps => 5),
  (override => 1),
  (package => 1),
  (pathname => 8),
  (pos => 2),
  (position => 4),
  (printOverlaps => 5),
  (println => 15),
  (printmap => 6),
  (product => 4),
  (props => 3),
  (r => 4),
  (raw => 4),
  (replace => 1),
  (require => 1),
  (round => 1),
  (same => 6),
  (scala => 13),
  (seq => 2),
  (size => 1),
  (smallest => 1),
  (sortBy => 3),
  (src => 4),
  (stefperf => 6),
  (take => 2),
  (than => 2),
  (the => 3),
  (these => 1),
  (this => 3),
  (to => 1),
  (toMap => 1),
  (toSeq => 3),
  (toString => 4),
  (toUpperCase => 2),
  (true => 1),
  (util => 6),
  (v => 13),
  (va => 3),
  (val => 30),
  (value => 1),
  (values => 8),
  (var => 6),
  (w => 6),
  (weekdayToCode => 9),
  (while => 4),
  (with => 1),
  (without => 1),
  (word => 32),
  (wordCounts => 17),
  (wordRegex => 8),
  (words => 2),
  (yield => 2),
  (zA => 4),
  (zip => 1),
  (zipWithIndex => 1)
)

--- Chapter 4 Exercise 5 -----------------------------------------------------------------------------------------------
(
  (Array => 4),
  (Boolean => 2),
  (Calendar => 8),
  (Chapter => 6),
  (Char => 1),
  (Double => 1),
  (FRIDAY => 1),
  (File => 4),
  (Friday => 1),
  (Hello => 4),
  (Int => 15),
  (JavaConverters => 2),
  (LinkedHashMap => 1),
  (ListMap => 2),
  (MONDAY => 1),
  (Map => 6),
  (Maps => 1),
  (Monday => 1),
  (SATURDAY => 1),
  (SUNDAY => 1),
  (Saturday => 1),
  (Scanner => 4),
  (SortedMap => 1),
  (Stefano => 1),
  (String => 13),
  (Sunday => 1),
  (System => 1),
  (THURSDAY => 1),
  (TUESDAY => 1),
  (Thursday => 1),
  (Top => 2),
  (TreeMap => 1),
  (Tuesday => 1),
  (Tuples => 1),
  (Unit => 1),
  (Use => 1),
  (WEDNESDAY => 1),
  (Wednesday => 1),
  (Words => 3),
  (World => 1),
  (Z => 4),
  (a => 4),
  (and => 6),
  (arr => 6),
  (array => 2),
  (arrmax => 4),
  (arrmin => 4),
  (as => 1),
  (asScala => 2),
  (at => 1),
  (case => 4),
  (caseSensitive => 6),
  (chapter => 5),
  (charAggregate => 8),
  (collection => 5),
  (com => 6),
  (contain => 1),
  (counts => 1),
  (cs => 4),
  (def => 5),
  (discountPerc => 2),
  (discountedPRices => 1),
  (discountedPrices => 2),
  (drop => 1),
  (element => 1),
  (else => 5),
  (eq => 3),
  (equal => 1),
  (exercise => 10),
  (exercises => 1),
  (extends => 1),
  (f => 9),
  (false => 2),
  (file => 2),
  (findAllMatchIn => 4),
  (findOverlaps => 2),
  (finding => 1),
  (for => 10),
  (foreach => 1),
  (frequent => 2),
  (fullPrices => 2),
  (get => 1),
  (getOrElse => 4),
  (getProperties => 1),
  (greater => 1),
  (gt => 3),
  (hasNext => 4),
  (have => 3),
  (hollow => 2),
  (i => 2),
  (if => 11),
  (immutable => 4),
  (impatient => 6),
  (import => 5),
  (in => 16),
  (io => 4),
  (isEmpty => 1),
  (java => 10),
  (k => 7),
  (keys => 1),
  (largest => 1),
  (least => 1),
  (length => 3),
  (less => 1),
  (let => 5),
  (letter => 7),
  (letters => 1),
  (line => 2),
  (lt => 3),
  (lteqgt => 2),
  (main => 4),
  (map => 4),
  (max => 2),
  (maxNameLength => 4),
  (min => 1),
  (minmax => 2),
  (most => 2),
  (must => 1),
  (mutable => 5),
  (n => 8),
  (new => 9),
  (next => 4),
  (no => 1),
  (nr => 1),
  (object => 1),
  (of => 1),
  (or => 1),
  (overlap => 2),
  (overlapping => 1),
  (overlaps => 5),
  (override => 1),
  (package => 1),
  (pathname => 8),
  (pos => 2),
  (position => 4),
  (printOverlaps => 5),
  (println => 15),
  (printmap => 6),
  (product => 4),
  (props => 3),
  (r => 4),
  (raw => 4),
  (replace => 1),
  (require => 1),
  (round => 1),
  (same => 6),
  (scala => 13),
  (seq => 2),
  (size => 1),
  (smallest => 1),
  (sortBy => 3),
  (src => 4),
  (stefperf => 6),
  (take => 2),
  (than => 2),
  (the => 3),
  (these => 1),
  (this => 3),
  (to => 1),
  (toMap => 1),
  (toSeq => 3),
  (toString => 4),
  (toUpperCase => 2),
  (true => 1),
  (util => 6),
  (v => 13),
  (va => 3),
  (val => 30),
  (value => 1),
  (values => 8),
  (var => 6),
  (w => 6),
  (weekdayToCode => 9),
  (while => 4),
  (with => 1),
  (without => 1),
  (word => 32),
  (wordCounts => 17),
  (wordRegex => 8),
  (words => 2),
  (yield => 2),
  (zA => 4),
  (zip => 1),
  (zipWithIndex => 1)
)

--- Chapter 4 Exercise 6 -----------------------------------------------------------------------------------------------
(
  (Monday => 2),
  (Tuesday => 3),
  (Wednesday => 4),
  (Thursday => 5),
  (Friday => 6),
  (Saturday => 7),
  (Sunday => 1)
)

--- Chapter 4 Exercise 7 -----------------------------------------------------------------------------------------------
awt.toolkit                     | sun.lwawt.macosx.LWCToolkit
file.encoding                   | UTF-8
file.separator                  | /
ftp.nonProxyHosts               | local|*.local|169.254/16|*.169.254/16
gopherProxySet                  | false
http.nonProxyHosts              | local|*.local|169.254/16|*.169.254/16
java.awt.graphicsenv            | sun.awt.CGraphicsEnvironment
java.awt.printerjob             | sun.lwawt.macosx.CPrinterJob
java.class.path                 | /Users/Stefano/Documents/GitHub/ScalaForTheImpatient/target/scala-2.12/classes:/Users/Stefano/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.12.14/scala-library-2.12.14.jar:/Users/Stefano/Documents/GitHub/ScalaForTheImpatient/lib/hamcrest-core-1.3-javadoc.jar:/Users/Stefano/Documents/GitHub/ScalaForTheImpatient/lib/hamcrest-core-1.3-sources.jar:/Users/Stefano/Documents/GitHub/ScalaForTheImpatient/lib/hamcrest-core-1.3.jar:/Users/Stefano/Documents/GitHub/ScalaForTheImpatient/lib/junit-4.12-javadoc.jar:/Users/Stefano/Documents/GitHub/ScalaForTheImpatient/lib/junit-4.12-sources.jar:/Users/Stefano/Documents/GitHub/ScalaForTheImpatient/lib/junit-4.12.jar
java.class.version              | 55.0
java.home                       | /Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home
java.io.tmpdir                  | /var/folders/vt/xh6vj3q915s06wdh7kvwf3f40000gn/T/
java.library.path               | /Users/Stefano/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
java.runtime.name               | OpenJDK Runtime Environment
java.runtime.version            | 11.0.12+7
java.specification.name         | Java Platform API Specification
java.specification.vendor       | Oracle Corporation
java.specification.version      | 11
java.vendor                     | Eclipse Foundation
java.vendor.url                 | https://adoptium.net/
java.vendor.url.bug             | https://github.com/adoptium/adoptium-support/issues
java.vendor.version             | Temurin-11.0.12+7
java.version                    | 11.0.12
java.version.date               | 2021-07-20
java.vm.compressedOopsMode      | Zero based
java.vm.info                    | mixed mode
java.vm.name                    | OpenJDK 64-Bit Server VM
java.vm.specification.name      | Java Virtual Machine Specification
java.vm.specification.vendor    | Oracle Corporation
java.vm.specification.version   | 11
java.vm.vendor                  | Eclipse Foundation
java.vm.version                 | 11.0.12+7
jdk.debug                       | release
line.separator                  | \n
os.arch                         | x86_64
os.name                         | Mac OS X
os.version                      | 10.16
path.separator                  | :
socksNonProxyHosts              | local|*.local|169.254/16|*.169.254/16
sun.arch.data.model             | 64
sun.awt.enableExtraMouseButtons | true
sun.boot.library.path           | /Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib
sun.cpu.endian                  | little
sun.cpu.isalist                 |
sun.font.fontmanager            | sun.font.CFontManager
sun.io.unicode.encoding         | UnicodeBig
sun.java.command                | com.stefperf.impatient.AllBook
sun.java.launcher               | SUN_STANDARD
sun.jnu.encoding                | UTF-8
sun.management.compiler         | HotSpot 64-Bit Tiered Compilers
sun.os.patch.level              | unknown
user.country                    | US
user.dir                        | /Users/Stefano/Documents/GitHub/ScalaForTheImpatient
user.home                       | /Users/Stefano
user.language                   | en
user.name                       | Stefano
user.timezone                   | Europe/Zurich

--- Chapter 4 Exercise 8 -----------------------------------------------------------------------------------------------
(1, 4, 8, 2, 5, 0, 7, 4, 5) => (0,8)

--- Chapter 4 Exercise 9 -----------------------------------------------------------------------------------------------
(1, 4, 8, 2, 5, 0, 7, 4, 5) => (3,2,4)

--- Chapter 4 Exercise 10 ----------------------------------------------------------------------------------------------
Use case: finding overlapping letters in the same position, with or without the same letter case.

Words 'Hello' and 'Stefano' have no same-position letter overlap.

Words 'Hello' and 'World' have this same-position letter overlap:
'L' as letter nr. 4

Words 'Hello' and 'hollow' have these same-position letter overlaps:
'H' as letter nr. 1
'L' as letter nr. 3
'L' as letter nr. 4
'O' as letter nr. 5

Words 'Hello' and 'hollow' have these same-position, same-case letter overlaps:
'l' as letter nr. 3
'l' as letter nr. 4
'o' as letter nr. 5



========================================================================================================================
=== Chapter 5. Classes =================================================================================================

--- Chapter 5 Exercise 1 -----------------------------------------------------------------------------------------------
saferCounter.increment() threw: 'integer overflow prevented'
counter -> -2147483648, saferCounter -> 2147483647

--- Chapter 5 Exercise 2 -----------------------------------------------------------------------------------------------
current bank account balance = 6000.0

--- Chapter 5 Exercise 3 -----------------------------------------------------------------------------------------------
09:45 before 10:05 => true

--- Chapter 5 Exercise 4 -----------------------------------------------------------------------------------------------
09:45 before 10:05 => true

--- Chapter 5 Exercise 5 -----------------------------------------------------------------------------------------------
13

--- Chapter 5 Exercise 6 -----------------------------------------------------------------------------------------------
Person(inputAge = -3).age = 0

--- Chapter 5 Exercise 7 -----------------------------------------------------------------------------------------------
first name = Stefano
last name = Perfetti

--- Chapter 5 Exercise 8 -----------------------------------------------------------------------------------------------
Tesla Model T -1
Tesla Model T 2021
Tesla Model T -1 1234567
Tesla Model T 2021 1234567

--- Chapter 5 Exercise 10 ----------------------------------------------------------------------------------------------
e: name = John Q. Public, salary = 0.0
e: name = Stefano, salary = 10000.0



========================================================================================================================
=== Chapter 6. Objects =================================================================================================

--- Chapter 6 Exercise 1 -----------------------------------------------------------------------------------------------
100.0 mile = 160.934 kilometer
12.5 gallon = 47.317625 liter
42.0 inch = 106.68 centimeter

--- Chapter 6 Exercise 2 -----------------------------------------------------------------------------------------------
100.0 mile = 160.934 kilometer
12.5 gallon = 47.317625 liter
42.0 inch = 106.68 centimeter

--- Chapter 6 Exercise 3 -----------------------------------------------------------------------------------------------
Origin = (x=3, y=4

--- Chapter 6 Exercise 4 -----------------------------------------------------------------------------------------------
new Point(3, 4) = (x=3.0, y=4.0)
Point(3, 4) = (x=3.0, y=4.0)

--- Chapter 6 Exercise 5 -----------------------------------------------------------------------------------------------
reverse to arguments

--- Chapter 6 Exercise 6 -----------------------------------------------------------------------------------------------
card suit = ♥, Unicode codepoint = \u2665
card suit = ♦, Unicode codepoint = \u2666
card suit = ♣, Unicode codepoint = \u2663
card suit = ♠, Unicode codepoint = \u2660

--- Chapter 6 Exercise 7 -----------------------------------------------------------------------------------------------
card suit ♥ is red
card suit ♦ is red
card suit ♣ is black
card suit ♠ is black

--- Chapter 6 Exercise 8 -----------------------------------------------------------------------------------------------
black, 0x0
blue, 0xff
green, 0xff00
cyan, 0xffff
red, 0xff0000
magenta, 0xff00ff
yellow, 0xffff00
white, 0xffffff



========================================================================================================================
=== Chapter 7. Packages and Imports ====================================================================================

--- Chapter 7 Exercise 1 -----------------------------------------------------------------------------------------------
Object Chapter7Exercise1A can see both com.horstmann and com.horstmann.impatient members:
This is class com.horstmann.Something.
This is class com.horstmann.impatient.Something.

Object Chapter7Exercise1B cannot see com.horstmann members, but only com.horstmann.impatient members:
This is class com.horstmann.impatient.Something.


--- Chapter 7 Exercise 2 -----------------------------------------------------------------------------------------------
This block sees _root_.ScalaForTheImpatient.chapter07.horstmann instead of _root_.com.horstmann:
This is class ScalaForTheImpatient.chapter07.horstmann.Something.

--- Chapter 7 Exercise 3 -----------------------------------------------------------------------------------------------
5 random integers: 129832950 323330443 2140339228 -1447076999 -871087822
5 random doubles in [-1, +1]: -0.399 -0.304 0.236 0.508 -0.872

--- Chapter 7 Exercise 4 -----------------------------------------------------------------------------------------------
(theory answer) Package objects are a Scala 2 workaround no longer needed in Scala 3.

--- Chapter 7 Exercise 5 -----------------------------------------------------------------------------------------------
(theory answer) private[com] makes a member visible in package com and all its contained packages.
That is not useful, since com is usually the top-level package containing all others.

--- Chapter 7 Exercises 6, 7 together ----------------------------------------------------------------------------------
Java HashMap = (
  (one => 1),
  (two => 2),
  (three => 3)
)
Scala HashMap = (
  (one => 1),
  (three => 3),
  (two => 2),
  (zero => 0)
)

--- Chapter 7 Exercise 8 -----------------------------------------------------------------------------------------------
(theory answer) "import java._; import javax._" import lots of members.
That is a bad idea because it probably causes lots of name conflicts.

--- Chapter 7 Exercise 9 -----------------------------------------------------------------------------------------------
Stefano, type the password: > secret
Welcome, Stefano!

--- Chapter 7 Exercise 10 ----------------------------------------------------------------------------------------------
The package scala overrides the following members of the package java.lang:
Boolean
Byte
Cloneable
deprecated
Double
Exception
Float
Long
Process
ProcessBuilder
Short
StringBuilder
Source: https://docs.google.com/spreadsheets/d/1xyToGau13ZEQXTQh1sgbPUJNc3-NBYcrQxLigbwDU1E/edit?usp=sharing



========================================================================================================================
=== Chapter 8. Inheritance =============================================================================================

--- Chapter 8 Exercise 1 -----------------------------------------------------------------------------------------------
After 3 operations:
- the checking account balance is 7997.0
- the fee total received by the bank is 3.0

--- Chapter 8 Exercise 3 -----------------------------------------------------------------------------------------------
Source: https://www.tutorialspoint.com/cplusplus/cpp_inheritance.htm (not a great example, in truth)
Total area: 35

--- Chapter 8 Exercise 4 -----------------------------------------------------------------------------------------------
The bundle 'mouse + keyboard + mouse pad' costs 99.70 CHF.

--- Chapter 8 Exercise 5 -----------------------------------------------------------------------------------------------
Point(3.0, 4.0)
LabeledPoint('Black Thursday', 1929.0, 230.07)

--- Chapter 8 Exercise 6 -----------------------------------------------------------------------------------------------
Rectangle(topLeftCorner=Point(3.0, 4.0), width=7.0, height=10.0) => centerPoint(6.5, 9.0).
Rectangle(centerPoint=Point(5.0, 5.0), radius=5.0) => centerPoint(5.0, 5.0).

--- Chapter 8 Exercise 7 -----------------------------------------------------------------------------------------------
new Square(new Point(3, 4), 5) => Square(topLeftCorner=Point(3, 4), side=5)
new Square(5) => Square(topLeftCorner=Point(0, 0), side=5)
new Square() => Square(topLeftCorner=Point(0, 0), side=0)

--- Chapter 8 Exercise 8 -----------------------------------------------------------------------------------------------
(bytecode reverse engineering exercise) the name field is duplicated, the getter method is overridden.

--- Chapter 8 Exercise 9 -----------------------------------------------------------------------------------------------
new AntWithVal().env = (), unwanted!
new AntWithDef().env = (0, 0), as desired.
The 2nd case works correctly because it is de facto a static method, so it needs no initialization.

--- Chapter 8 Exercise 10 ----------------------------------------------------------------------------------------------
(theory answer)
A 'protected' constructor can be called only by this class (+companion object) and its subclasses.

--- Chapter 8 Exercise 11 ----------------------------------------------------------------------------------------------
Point(x = -3, y = -4)
Point(x = -3, y = 2)
Point(x = 5, y = -4)
Point(x = 5, y = 2)



========================================================================================================================
=== Chapter 9. Files and Regular Expressions ===========================================================================

--- Chapter 9 Exercise 1 -----------------------------------------------------------------------------------------------
-- File Chapter09Exercise01.txt contains:
reordered.
to be
a sentence
is
This
-- File Chapter09Exercise01LineReversed.txt contains:


--- Chapter 9 Exercise 2 -----------------------------------------------------------------------------------------------
(deliberately changing the specs for convenience' sake)
-- File Chapter09Exercise02.txt contains:
gtsegfsez	dfgdf	d			g
			dvdf	gb

		end
-- File Chapter09Exercise02TabsVisualized.txt contains:


--- Chapter 9 Exercise 3 -----------------------------------------------------------------------------------------------
-- Words with 12+ chars:
ScalaForTheImpatient
deliberately
requirements

--- Chapter 9 Exercise 4 -----------------------------------------------------------------------------------------------
-- Numbers found in file:
#1: +.1 = 0.1
#2: -1. = -1.0
#3: 2 = 2.0
#4: 3.14
#5: -15E-2 = -0.15
#6: 3.53e+03 = 3530.0
#7: .1 = 0.1
#8: 1. = 1.0
#9: 2 = 2.0
#10: 3.14
#11: 15E-02 = 0.15
#12: 3.53e03 = 3530.0
-- Stats:
max = 3530.000
avg = 589.207
sum = 7070.480
min = -1.000

--- Chapter 9 Exercise 5 -----------------------------------------------------------------------------------------------
-- File contents:
      1          1.0
      2          0.5
      4          0.25
      8          0.125
     16          0.0625
     32          0.03125
     64          0.015625
    128          0.0078125
    256          0.00390625
    512          0.001953125
   1024          9.765625E-4
   2048          4.8828125E-4
   4096          2.44140625E-4
   8192          1.220703125E-4
  16384          6.103515625E-5
  32768          3.0517578125E-5
  65536          1.52587890625E-5
 131072          7.62939453125E-6
 262144          3.814697265625E-6
 524288          1.9073486328125E-6
1048576          9.5367431640625E-7


--- Chapter 9 Exercise 6 -----------------------------------------------------------------------------------------------
Quoted strings found in file:
"Hello, World!"
""
"\""
"a\"b"
"cd\\"

--- Chapter 9 Exercise 7 -----------------------------------------------------------------------------------------------
these
are
not
floating
point
numbers
3.14these
are-15E-2
3.53eNOT+03
float1.ing
2PoInT3.14
numbers

--- Chapter 9 Exercise 8 -----------------------------------------------------------------------------------------------
Image sources on page https://horstmann.com/scala:
- images/cover.png
- http://ad.linksynergy.com/fs-bin/show?id=R/ODEl37NHE&amp;bids=163217.2476823&amp;type=2&amp;subid=0

--- Chapter 9 Exercise 9 -----------------------------------------------------------------------------------------------
40 files with extension .scala were found in ./src/main/scala.

--- Chapter 9 Exercise 10 ----------------------------------------------------------------------------------------------
- Before serialization:
Alfred's friends: Boris.
Boris's friends: Alfred, Carlo.
Carlo's friends: Boris.
- After serialization:
Alfred's friends: Boris.
Boris's friends: Alfred, Carlo.
Carlo's friends: Boris.



========================================================================================================================
=== Chapter 10. Traits =================================================================================================

--- Chapter 10 Exercise 1 ----------------------------------------------------------------------------------------------
- Behavior of java.awt.Rectangle ---
rect = java.awt.Rectangle[x=5,y=10,width=20,height=30]
...executing rect.translate(10, -10)...
rect = java.awt.Rectangle[x=15,y=0,width=20,height=30]
...executing rect.grow(10, 20)...
rect = java.awt.Rectangle[x=5,y=-20,width=40,height=70]

- Behavior of java.awt.geom.Ellipse2D ---
egg = RectangleLike[x=5.0,y=10.0,width=20.0,height=30.0]
...executing egg.translate(10, -10)...
egg = RectangleLike[x=15.0,y=0.0,width=20.0,height=30.0]
...executing egg.grow(10, 20)...
egg = RectangleLike[x=5.0,y=-20.0,width=40.0,height=70.0]

--- Chapter 10 Exercise 2 ----------------------------------------------------------------------------------------------
OrderedPoints
before sorting: ((3, 4), (3, 2), (1, 4), (3, 1), (3, 2))
after sorting:  ((1, 4), (3, 1), (3, 2), (3, 2), (3, 4))

--- Chapter 10 Exercise 3 ----------------------------------------------------------------------------------------------
skipped because it is a pure theory exercise

--- Chapter 10 Exercise 4 ----------------------------------------------------------------------------------------------
Encoding the test text 'this is the test text' with Caesar cipher = 3:
wklv#lv#wkh#whvw#wh{w
Encoding the test text 'this is the test text' with Caesar cipher = -3:
qefpfpqebqbpqqbuq

--- Chapter 10 Exercise 5 ----------------------------------------------------------------------------------------------
property 'myPoint' changed from (0,1) to (2,3)
property 'myPoint' changed from (2,3) to (4,5)
property 'myPoint' changed from (4,5) to (6,7)
property 'myPoint' changed from (6,7) to (8,9)
property 'myPoint' changed from (8,9) to (10,11)

--- Chapter 10 Exercise 6 ----------------------------------------------------------------------------------------------
skipped because it is a pure theory exercise

--- Chapter 10 Exercise 7 ----------------------------------------------------------------------------------------------
### Deposited 100.0 into account 1, new balance = 100.0
### Failed to withdraw 200.0 from account 1, balance = 100.0
(to see the point of this exercise, it is necessary to write and compile the code incrementally)
--- Chapter 10 Exercise 8 ----------------------------------------------------------------------------------------------
ReversingAnagrammer with HalfCuttingAnagrammer: GANAMAR
HalfCuttingAnagrammer with ReversingAnagrammer: ANAMARG

--- Chapter 10 Exercises 9, 10 together --------------------------------------------------------------------------------
-- Echoing file $filename one character at a time, but reading bufferSize characters at a time... --
The 0-bytes buffer '' has been exhausted; trying to read more bytes...
a
b
c
d
e
f
g
h
i
j
The 10-bytes buffer 'abcdefghij' has been exhausted; trying to read more bytes...
k
l
m
n
o
p
q
r
s
t
The 10-bytes buffer 'klmnopqrst' has been exhausted; trying to read more bytes...
u
v
w
x
y
z
The 6-bytes buffer 'uvwxyz' has been exhausted; trying to read more bytes...
The input stream has finished.

--- Chapter 10 Exercise 11 ---------------------------------------------------------------------------------------------
-- Echoing file $filename one character at a time with iterator... --
a
b
c
d
e
f
g
h
i
j
k
l
m
n
o
p
q
r
s
t
u
v
w
x
y
z

--- Chapter 10 Exercise 12 ---------------------------------------------------------------------------------------------
Skipped as it is not a coding exercise.



========================================================================================================================
=== Chapter 11. Operators ==============================================================================================

--- Chapter 11 Exercise 1 ----------------------------------------------------------------------------------------------
3 + 4 -> 5 == (3 + 4) -> 5 == (7,5), from left to right, because both operators have the same precedence.
3 + 4 -> 5 is legal only as 3 -> (4 + 5) == (3,9).

--- Chapter 11 Exercise 2 ----------------------------------------------------------------------------------------------
Operators ** or ^ for power would have an unintuitively too low precedence, based on Scala's rules.

--- Chapter 11 Exercise 3 ----------------------------------------------------------------------------------------------
2/3 + 3/4 = 17/12
2/3 - 3/4 = -1/12
2/3 * 3/4 = 1/2
2/3 / 3/4 = 8/9
2/3 + (-3/4) = -1/12
2/3 - (-3/4) = 17/12
2/3 * (-3/4) = -1/2
2/3 / (-3/4) = -8/9

--- Chapter 11 Exercise 4 ----------------------------------------------------------------------------------------------
Money(1, 75) + Money(0, 50) == Money(2, 25): true
It is at least questionable to implement operator *, as money cannot be multiplied by money.
It is at least questionable to implement operator /, as money divided by money yields a pure number.

--- Chapter 11 Exercise 5 ----------------------------------------------------------------------------------------------
println(Table() | "Java" | "Scala" || "Gosling" | "Odersky" || "JVM" | "JVM, .NET")
 ->
<table><tr><td>Java</td><td>Scala</td></tr><tr><td>Gosling</td><td>Odersky</td></tr><tr><td>JVM</td><td>JVM, .NET</td></tr></table>

--- Chapter 11 Exercise 6 ----------------------------------------------------------------------------------------------
a0 =
 /\_/\
( ' ' )
(  -  )
 | | |
(__|__)

a1 =
   -----
 / Hello \
<  Scala |
 \ Coder /
   -----

println(
  a0 << a1
     ^^
  a1 << a0
)

 ->

 /\_/\     -----
( ' ' )  / Hello \
(  -  ) <  Scala |
 | | |   \ Coder /
(__|__)    -----

   -----    /\_/\
 / Hello \ ( ' ' )
<  Scala | (  -  )
 \ Coder /  | | |
   -----   (__|__)

--- Chapter 11 Exercise 7 ----------------------------------------------------------------------------------------------
initial BitSequence contents: 0000000000000000000000000000000000000000000000000000000000000000
final BitSequence contents:   0010100010100010100010100010100010100010100010100010100010100010

--- Chapter 11 Exercise 8 ----------------------------------------------------------------------------------------------
M0 =
[[1.000, 2.000, 3.000],
 [4.000, 5.000, 6.000]]

M1 =
[[1.000, 1.000, 1.000],
 [1.000, 1.000, 1.000]]

M2 =
[[1.000, -1.000, 1.000],
 [-1.000, 1.000, -1.000]]

(M0 + M1 * 2) * M2 + 7 =
[[10.000, 3.000, 12.000],
 [1.000, 14.000, -1.000]]


--- Chapter 11 Exercise 9 ----------------------------------------------------------------------------------------------
String '  ' matches to <dir = '', filename = ''>.
String '/home/cay/readme.txt' matches to <dir = '/home/cay', filename = 'readme.txt'>.
String ' readme.txt  ' matches to <dir = '', filename = 'readme.txt'>.
String '' matches to <dir = '', filename = ''>.

--- Chapter 11 Exercise 10 ---------------------------------------------------------------------------------------------
String '  ' does not match any of the target patterns.
String '/home/cay/readme.txt' matches to <dir1 = home, dir2 = cay, filename = 'readme.txt'>.
String ' readme.txt  ' matches to <filename = 'readme.txt'>.
String '' does not match any of the target patterns.
String 'dirname/filename.ext' matches to <dir = dirname, filename = 'filename.ext'>.

--- Chapter 11 Exercise 11 ---------------------------------------------------------------------------------------------
-- Solution 1, predefining (=hardcoding) property path 'java.' as suggested: --
println(SysProps.java.home):
/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home
println(TieredSysProps.java.vm.specification.version):
<<<NOT POSSIBLE, BECAUSE THIS PATH IS NOT HARDCODED>>>

-- Solution 2, allowing any tiered property path: --
println(TieredSysProps.java.home):
/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home
println(TieredSysProps.java.vm.specification.version):
11

--- Chapter 11 Exercises 12, 13 together -------------------------------------------------------------------------------
(This exercise is a simplistic implementation for didactic purposes)
XML:
<rootElement>
  <html>
    <body>
      <ul id="41">ul41
        <li>1</li>
        <li>2</li>
        <li>3</li>
      </ul>
      <ul id="42">ul42
        <li>4</li>
        <li>5</li>
        <li>6</li>
      </ul>
      <ul id="43">ul43
        <li>7</li>
        <li>8</li>
        <li>9</li>
      </ul>
    </body>
  </html>
</rootElement>

println(rootElement.html.body.ul(id="42").li):
ArrayBuffer(XMLElement(name='li', text='4', 0 attributes, 0 _children), XMLElement(name='li', text='5', 0 attributes, 0 _children), XMLElement(name='li', text='6', 0 attributes, 0 _children))

println(builder.ul(id="42", style="list-style: lower-alpha;"))
XMLElement(name='ul', text='', 2 attributes, 0 _children)



========================================================================================================================
=== Chapter 12. Higher-Order Functions =================================================================================

--- Chapter 12 Exercise 1 ----------------------------------------------------------------------------------------------
values(x => x * x, -5, 5):
Vector((-5,25), (-4,16), (-3,9), (-2,4), (-1,1), (0,0), (1,1), (2,4), (3,9), (4,16), (5,25))

--- Chapter 12 Exercise 2 ----------------------------------------------------------------------------------------------
Array(3, 7, 2, 1).reduceLeft(_ max _):
7

--- Chapter 12 Exercises 3, 4 together ---------------------------------------------------------------------------------
Factorial using reduceLeft:
0 -> 1
1 -> 1
2 -> 2
3 -> 6
4 -> 24
5 -> 120
6 -> 720
7 -> 5040
8 -> 40320
9 -> 362880
Factorial using foldLeft:
0 -> 1
1 -> 1
2 -> 2
3 -> 6
4 -> 24
5 -> 120
6 -> 720
7 -> 5040
8 -> 40320
9 -> 362880

--- Chapter 12 Exercise 5 ----------------------------------------------------------------------------------------------
largest(x => 10 * x - x * x, 1 to 10):
25

--- Chapter 12 Exercise 6 ----------------------------------------------------------------------------------------------
largestAt(x => 10 * x - x * x, 1 to 10):
5

--- Chapter 12 Exercise 7 ----------------------------------------------------------------------------------------------
adjustToPair(_ * _)((6, 7)):
42
pairs = Vector((1,11), (2,12), (3,13), (4,14), (5,15), (6,16), (7,17), (8,18), (9,19), (10,20))
pairs.map(adjustToPair(_ + _)(_)):
Vector(12, 14, 16, 18, 20, 22, 24, 26, 28, 30)

--- Chapter 12 Exercise 8 ----------------------------------------------------------------------------------------------
Seq("this", "is", "exercise", "eight").corresponds(Seq(4, 2, 8,5))(_.length == _):
true

--- Chapter 12 Exercise 9 ----------------------------------------------------------------------------------------------
myCorresponds(Seq("this", "is", "exercise", "eight"), Seq(4, 2, 8,5), (s: String, i: Int) => s.length == i):
true
This time, it is necessary to fully declare the function argument, in order to satisfy the compiler.

--- Chapter 12 Exercise 10 ---------------------------------------------------------------------------------------------
Here, for the first Boolean parameter, call-by-name or not makes no difference, as it must be evaluated immediately anyway.
However, the second Unit parameter must be call-by-name, so that it can be evaluated later only if needed.
Currying is not strictly needed, but it allows a nicer syntax when using this control abstraction.
For example:
(1 to 5).foreach(i => unless(i == 3) {println(i)})
 ->
1
2
4
5



========================================================================================================================
=== Chapter 13. Collections ============================================================================================

--- Chapter 13 Exercise 1 ----------------------------------------------------------------------------------------------
indexes("Mississippi") -> TreeMap(I -> Set(1, 10, 7, 4), M -> Set(0), P -> Set(9, 8), S -> Set(5, 2, 6, 3))

--- Chapter 13 Exercise 2 ----------------------------------------------------------------------------------------------
indexes("Mississippi") -> Map(I -> Set(1, 4, 7, 10), M -> Set(0), P -> Set(8, 9), S -> Set(2, 3, 5, 6))

--- Chapter 13 Exercise 3 ----------------------------------------------------------------------------------------------
halveByCopying(<integers from 1 to 50000>) took 2078 millisecs.
halveByRemoving(<integers from 1 to 50000>) took 2046 millisecs.

--- Chapter 13 Exercise 4 ----------------------------------------------------------------------------------------------
mapKeys(Array("Tom", "Fred", "Harry"), Map("Tom" -> 3, "Dick" -> 4, "Harry" -> 5)) -> (3, 5)

--- Chapter 13 Exercise 5 ----------------------------------------------------------------------------------------------
myMkString((0 to 9).map(_.toString), ", ") -> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9

--- Chapter 13 Exercise 6 ----------------------------------------------------------------------------------------------
lst = List(1, 2, 3)
Both expressions just rebuild the list:
(lst :\ List[Int]())(_ :: _) -> List(1, 2, 3)
(List[Int]() /: lst)(_ :+ _) -> List(1, 2, 3)
Both expressions can be modified to reverse the list:
[inefficient]   (lst :\ List[Int]())((el, lstNew) => lstNew :+ el) -> List(3, 2, 1)
[ efficient ]   (List[Int]() /: lst)((lstNew, el) => el +: lstNew) -> List(3, 2, 1)

--- Chapter 13 Exercise 7 ----------------------------------------------------------------------------------------------
prices = List(1.1, 1.2, 1.3), quantities = List(11, 12, 13)
(prices zip quantities) map { t => t._1 * t._2 } = List(12.100000000000001, 14.399999999999999, 16.900000000000002)
(prices zip quantities) map { Function.tupled(_ * _) } = List(12.100000000000001, 14.399999999999999, 16.900000000000002)

--- Chapter 13 Exercise 8 ----------------------------------------------------------------------------------------------
to2DArr(Array(1, 2, 3, 4, 5, 6), 3) =
[[(1.0, 2.0, 3.0)],
 [(4.0, 5.0, 6.0)]]

to2DArr(Array(1, 2, 3, 4, 5), 3) =
[[(1.0, 2.0, 3.0)],
 [(4.0, 5.0, NaN)]]

--- Chapter 13 Exercise 9 ----------------------------------------------------------------------------------------------
flatMap is used for all but the last generator inside the `for` parentheses, so as to retain only one "level". Example with 3 generators:
for (i <- 1 to 3; j <- 1 to i; k <- 1 to j) yield i * j * k:
 Vector(1, 2, 4, 8, 3, 6, 12, 9, 18, 27)

(1 to 3).flatMap(i => (1 to i).flatMap(j => (1 to j).map(k => i * j * k))):
 Vector(1, 2, 4, 8, 3, 6, 12, 9, 18, 27)

--- Chapter 13 Exercise 10 ---------------------------------------------------------------------------------------------
Time zones:
ACT
AET
AGT
ART
AST
Africa/Abidjan
Africa/Accra
Africa/Addis_Ababa
Africa/Algiers
Africa/Asmara
Africa/Asmera
Africa/Bamako
Africa/Bangui
Africa/Banjul
Africa/Bissau
Africa/Blantyre
Africa/Brazzaville
Africa/Bujumbura
Africa/Cairo
Africa/Casablanca
Africa/Ceuta
Africa/Conakry
Africa/Dakar
Africa/Dar_es_Salaam
Africa/Djibouti
Africa/Douala
Africa/El_Aaiun
Africa/Freetown
Africa/Gaborone
Africa/Harare
Africa/Johannesburg
Africa/Juba
Africa/Kampala
Africa/Khartoum
Africa/Kigali
Africa/Kinshasa
Africa/Lagos
Africa/Libreville
Africa/Lome
Africa/Luanda
Africa/Lubumbashi
Africa/Lusaka
Africa/Malabo
Africa/Maputo
Africa/Maseru
Africa/Mbabane
Africa/Mogadishu
Africa/Monrovia
Africa/Nairobi
Africa/Ndjamena
Africa/Niamey
Africa/Nouakchott
Africa/Ouagadougou
Africa/Porto-Novo
Africa/Sao_Tome
Africa/Timbuktu
Africa/Tripoli
Africa/Tunis
Africa/Windhoek
America/Adak
America/Anchorage
America/Anguilla
America/Antigua
America/Araguaina
America/Argentina/Buenos_Aires
America/Argentina/Catamarca
America/Argentina/ComodRivadavia
America/Argentina/Cordoba
America/Argentina/Jujuy
America/Argentina/La_Rioja
America/Argentina/Mendoza
America/Argentina/Rio_Gallegos
America/Argentina/Salta
America/Argentina/San_Juan
America/Argentina/San_Luis
America/Argentina/Tucuman
America/Argentina/Ushuaia
America/Aruba
America/Asuncion
America/Atikokan
America/Atka
America/Bahia
America/Bahia_Banderas
America/Barbados
America/Belem
America/Belize
America/Blanc-Sablon
America/Boa_Vista
America/Bogota
America/Boise
America/Buenos_Aires
America/Cambridge_Bay
America/Campo_Grande
America/Cancun
America/Caracas
America/Catamarca
America/Cayenne
America/Cayman
America/Chicago
America/Chihuahua
America/Coral_Harbour
America/Cordoba
America/Costa_Rica
America/Creston
America/Cuiaba
America/Curacao
America/Danmarkshavn
America/Dawson
America/Dawson_Creek
America/Denver
America/Detroit
America/Dominica
America/Edmonton
America/Eirunepe
America/El_Salvador
America/Ensenada
America/Fort_Nelson
America/Fort_Wayne
America/Fortaleza
America/Glace_Bay
America/Godthab
America/Goose_Bay
America/Grand_Turk
America/Grenada
America/Guadeloupe
America/Guatemala
America/Guayaquil
America/Guyana
America/Halifax
America/Havana
America/Hermosillo
America/Indiana/Indianapolis
America/Indiana/Knox
America/Indiana/Marengo
America/Indiana/Petersburg
America/Indiana/Tell_City
America/Indiana/Vevay
America/Indiana/Vincennes
America/Indiana/Winamac
America/Indianapolis
America/Inuvik
America/Iqaluit
America/Jamaica
America/Jujuy
America/Juneau
America/Kentucky/Louisville
America/Kentucky/Monticello
America/Knox_IN
America/Kralendijk
America/La_Paz
America/Lima
America/Los_Angeles
America/Louisville
America/Lower_Princes
America/Maceio
America/Managua
America/Manaus
America/Marigot
America/Martinique
America/Matamoros
America/Mazatlan
America/Mendoza
America/Menominee
America/Merida
America/Metlakatla
America/Mexico_City
America/Miquelon
America/Moncton
America/Monterrey
America/Montevideo
America/Montreal
America/Montserrat
America/Nassau
America/New_York
America/Nipigon
America/Nome
America/Noronha
America/North_Dakota/Beulah
America/North_Dakota/Center
America/North_Dakota/New_Salem
America/Nuuk
America/Ojinaga
America/Panama
America/Pangnirtung
America/Paramaribo
America/Phoenix
America/Port-au-Prince
America/Port_of_Spain
America/Porto_Acre
America/Porto_Velho
America/Puerto_Rico
America/Punta_Arenas
America/Rainy_River
America/Rankin_Inlet
America/Recife
America/Regina
America/Resolute
America/Rio_Branco
America/Rosario
America/Santa_Isabel
America/Santarem
America/Santiago
America/Santo_Domingo
America/Sao_Paulo
America/Scoresbysund
America/Shiprock
America/Sitka
America/St_Barthelemy
America/St_Johns
America/St_Kitts
America/St_Lucia
America/St_Thomas
America/St_Vincent
America/Swift_Current
America/Tegucigalpa
America/Thule
America/Thunder_Bay
America/Tijuana
America/Toronto
America/Tortola
America/Vancouver
America/Virgin
America/Whitehorse
America/Winnipeg
America/Yakutat
America/Yellowknife
Antarctica/Casey
Antarctica/Davis
Antarctica/DumontDUrville
Antarctica/Macquarie
Antarctica/Mawson
Antarctica/McMurdo
Antarctica/Palmer
Antarctica/Rothera
Antarctica/South_Pole
Antarctica/Syowa
Antarctica/Troll
Antarctica/Vostok
Arctic/Longyearbyen
Asia/Aden
Asia/Almaty
Asia/Amman
Asia/Anadyr
Asia/Aqtau
Asia/Aqtobe
Asia/Ashgabat
Asia/Ashkhabad
Asia/Atyrau
Asia/Baghdad
Asia/Bahrain
Asia/Baku
Asia/Bangkok
Asia/Barnaul
Asia/Beirut
Asia/Bishkek
Asia/Brunei
Asia/Calcutta
Asia/Chita
Asia/Choibalsan
Asia/Chongqing
Asia/Chungking
Asia/Colombo
Asia/Dacca
Asia/Damascus
Asia/Dhaka
Asia/Dili
Asia/Dubai
Asia/Dushanbe
Asia/Famagusta
Asia/Gaza
Asia/Harbin
Asia/Hebron
Asia/Ho_Chi_Minh
Asia/Hong_Kong
Asia/Hovd
Asia/Irkutsk
Asia/Istanbul
Asia/Jakarta
Asia/Jayapura
Asia/Jerusalem
Asia/Kabul
Asia/Kamchatka
Asia/Karachi
Asia/Kashgar
Asia/Kathmandu
Asia/Katmandu
Asia/Khandyga
Asia/Kolkata
Asia/Krasnoyarsk
Asia/Kuala_Lumpur
Asia/Kuching
Asia/Kuwait
Asia/Macao
Asia/Macau
Asia/Magadan
Asia/Makassar
Asia/Manila
Asia/Muscat
Asia/Nicosia
Asia/Novokuznetsk
Asia/Novosibirsk
Asia/Omsk
Asia/Oral
Asia/Phnom_Penh
Asia/Pontianak
Asia/Pyongyang
Asia/Qatar
Asia/Qostanay
Asia/Qyzylorda
Asia/Rangoon
Asia/Riyadh
Asia/Saigon
Asia/Sakhalin
Asia/Samarkand
Asia/Seoul
Asia/Shanghai
Asia/Singapore
Asia/Srednekolymsk
Asia/Taipei
Asia/Tashkent
Asia/Tbilisi
Asia/Tehran
Asia/Tel_Aviv
Asia/Thimbu
Asia/Thimphu
Asia/Tokyo
Asia/Tomsk
Asia/Ujung_Pandang
Asia/Ulaanbaatar
Asia/Ulan_Bator
Asia/Urumqi
Asia/Ust-Nera
Asia/Vientiane
Asia/Vladivostok
Asia/Yakutsk
Asia/Yangon
Asia/Yekaterinburg
Asia/Yerevan
Atlantic/Azores
Atlantic/Bermuda
Atlantic/Canary
Atlantic/Cape_Verde
Atlantic/Faeroe
Atlantic/Faroe
Atlantic/Jan_Mayen
Atlantic/Madeira
Atlantic/Reykjavik
Atlantic/South_Georgia
Atlantic/St_Helena
Atlantic/Stanley
Australia/ACT
Australia/Adelaide
Australia/Brisbane
Australia/Broken_Hill
Australia/Canberra
Australia/Currie
Australia/Darwin
Australia/Eucla
Australia/Hobart
Australia/LHI
Australia/Lindeman
Australia/Lord_Howe
Australia/Melbourne
Australia/NSW
Australia/North
Australia/Perth
Australia/Queensland
Australia/South
Australia/Sydney
Australia/Tasmania
Australia/Victoria
Australia/West
Australia/Yancowinna
BET
BST
Brazil/Acre
Brazil/DeNoronha
Brazil/East
Brazil/West
CAT
CET
CNT
CST
CST6CDT
CTT
Canada/Atlantic
Canada/Central
Canada/Eastern
Canada/Mountain
Canada/Newfoundland
Canada/Pacific
Canada/Saskatchewan
Canada/Yukon
Chile/Continental
Chile/EasterIsland
Cuba
EAT
ECT
EET
EST
EST5EDT
Egypt
Eire
Etc/GMT
Etc/GMT+0
Etc/GMT+1
Etc/GMT+10
Etc/GMT+11
Etc/GMT+12
Etc/GMT+2
Etc/GMT+3
Etc/GMT+4
Etc/GMT+5
Etc/GMT+6
Etc/GMT+7
Etc/GMT+8
Etc/GMT+9
Etc/GMT-0
Etc/GMT-1
Etc/GMT-10
Etc/GMT-11
Etc/GMT-12
Etc/GMT-13
Etc/GMT-14
Etc/GMT-2
Etc/GMT-3
Etc/GMT-4
Etc/GMT-5
Etc/GMT-6
Etc/GMT-7
Etc/GMT-8
Etc/GMT-9
Etc/GMT0
Etc/Greenwich
Etc/UCT
Etc/UTC
Etc/Universal
Etc/Zulu
Europe/Amsterdam
Europe/Andorra
Europe/Astrakhan
Europe/Athens
Europe/Belfast
Europe/Belgrade
Europe/Berlin
Europe/Bratislava
Europe/Brussels
Europe/Bucharest
Europe/Budapest
Europe/Busingen
Europe/Chisinau
Europe/Copenhagen
Europe/Dublin
Europe/Gibraltar
Europe/Guernsey
Europe/Helsinki
Europe/Isle_of_Man
Europe/Istanbul
Europe/Jersey
Europe/Kaliningrad
Europe/Kiev
Europe/Kirov
Europe/Lisbon
Europe/Ljubljana
Europe/London
Europe/Luxembourg
Europe/Madrid
Europe/Malta
Europe/Mariehamn
Europe/Minsk
Europe/Monaco
Europe/Moscow
Europe/Nicosia
Europe/Oslo
Europe/Paris
Europe/Podgorica
Europe/Prague
Europe/Riga
Europe/Rome
Europe/Samara
Europe/San_Marino
Europe/Sarajevo
Europe/Saratov
Europe/Simferopol
Europe/Skopje
Europe/Sofia
Europe/Stockholm
Europe/Tallinn
Europe/Tirane
Europe/Tiraspol
Europe/Ulyanovsk
Europe/Uzhgorod
Europe/Vaduz
Europe/Vatican
Europe/Vienna
Europe/Vilnius
Europe/Volgograd
Europe/Warsaw
Europe/Zagreb
Europe/Zaporozhye
Europe/Zurich
GB
GB-Eire
GMT
GMT0
Greenwich
HST
Hongkong
IET
IST
Iceland
Indian/Antananarivo
Indian/Chagos
Indian/Christmas
Indian/Cocos
Indian/Comoro
Indian/Kerguelen
Indian/Mahe
Indian/Maldives
Indian/Mauritius
Indian/Mayotte
Indian/Reunion
Iran
Israel
JST
Jamaica
Japan
Kwajalein
Libya
MET
MIT
MST
MST7MDT
Mexico/BajaNorte
Mexico/BajaSur
Mexico/General
NET
NST
NZ
NZ-CHAT
Navajo
PLT
PNT
PRC
PRT
PST
PST8PDT
Pacific/Apia
Pacific/Auckland
Pacific/Bougainville
Pacific/Chatham
Pacific/Chuuk
Pacific/Easter
Pacific/Efate
Pacific/Enderbury
Pacific/Fakaofo
Pacific/Fiji
Pacific/Funafuti
Pacific/Galapagos
Pacific/Gambier
Pacific/Guadalcanal
Pacific/Guam
Pacific/Honolulu
Pacific/Johnston
Pacific/Kiritimati
Pacific/Kosrae
Pacific/Kwajalein
Pacific/Majuro
Pacific/Marquesas
Pacific/Midway
Pacific/Nauru
Pacific/Niue
Pacific/Norfolk
Pacific/Noumea
Pacific/Pago_Pago
Pacific/Palau
Pacific/Pitcairn
Pacific/Pohnpei
Pacific/Ponape
Pacific/Port_Moresby
Pacific/Rarotonga
Pacific/Saipan
Pacific/Samoa
Pacific/Tahiti
Pacific/Tarawa
Pacific/Tongatapu
Pacific/Truk
Pacific/Wake
Pacific/Wallis
Pacific/Yap
Poland
Portugal
ROK
SST
Singapore
SystemV/AST4
SystemV/AST4ADT
SystemV/CST6
SystemV/CST6CDT
SystemV/EST5
SystemV/EST5EDT
SystemV/HST10
SystemV/MST7
SystemV/MST7MDT
SystemV/PST8
SystemV/PST8PDT
SystemV/YST9
SystemV/YST9YDT
Turkey
UCT
US/Alaska
US/Aleutian
US/Arizona
US/Central
US/East-Indiana
US/Eastern
US/Hawaii
US/Indiana-Starke
US/Michigan
US/Mountain
US/Pacific
US/Samoa
UTC
Universal
VST
W-SU
WET
Zulu
The continent with most time zones is America, having 139 time zones.

--- Chapter 13 Exercise 11 ---------------------------------------------------------------------------------------------
The given code involves unchecked concurrent read/write of shared memory. Results would be random.
Character frequencies in this file, counted without parallelism:
(
  (
 => 140),
  (  => 1267),
  (! => 2),
  (" => 110),
  ($ => 12),
  (% => 3),
  (( => 200),
  () => 200),
  (* => 13),
  (+ => 31),
  (, => 82),
  (- => 24),
  (. => 110),
  (/ => 15),
  (0 => 15),
  (1 => 46),
  (2 => 19),
  (3 => 24),
  (4 => 7),
  (5 => 8),
  (6 => 3),
  (7 => 1),
  (8 => 1),
  (9 => 3),
  (: => 44),
  (; => 4),
  (< => 9),
  (= => 66),
  (> => 45),
  (A => 17),
  (B => 15),
  (C => 30),
  (D => 12),
  (E => 7),
  (F => 8),
  (H => 4),
  (I => 31),
  (K => 6),
  (L => 18),
  (M => 30),
  (N => 15),
  (O => 3),
  (P => 4),
  (R => 4),
  (S => 38),
  (T => 22),
  (U => 4),
  (V => 5),
  (W => 2),
  (Z => 8),
  ([ => 35),
  (\ => 36),
  (] => 35),
  (_ => 31),
  (` => 2),
  (a => 220),
  (b => 34),
  (c => 111),
  (d => 78),
  (e => 377),
  (f => 60),
  (g => 42),
  (h => 68),
  (i => 259),
  (j => 15),
  (k => 21),
  (l => 177),
  (m => 99),
  (n => 257),
  (o => 174),
  (p => 149),
  (q => 21),
  (r => 258),
  (s => 216),
  (t => 345),
  (u => 71),
  (v => 34),
  (w => 17),
  (x => 40),
  (y => 41),
  (z => 9),
  ({ => 36),
  (} => 36)
)
<thread>
<thread>
<thread>
<thread>
<thread>
<thread>
<thread>
<thread>
<thread>
<thread>
<thread>
<thread>
<thread>
<thread>
<thread>
<thread>
<thread>
<thread>
<thread>
<thread>
<thread>
<thread>
<thread>
Character frequencies in this file, counted with parallelism:
(
  (
 => 140),
  (  => 1267),
  (! => 2),
  (" => 110),
  ($ => 12),
  (% => 3),
  (( => 200),
  () => 200),
  (* => 13),
  (+ => 31),
  (, => 82),
  (- => 24),
  (. => 110),
  (/ => 15),
  (0 => 15),
  (1 => 46),
  (2 => 19),
  (3 => 24),
  (4 => 7),
  (5 => 8),
  (6 => 3),
  (7 => 1),
  (8 => 1),
  (9 => 3),
  (: => 44),
  (; => 4),
  (< => 9),
  (= => 66),
  (> => 45),
  (A => 17),
  (B => 15),
  (C => 30),
  (D => 12),
  (E => 7),
  (F => 8),
  (H => 4),
  (I => 31),
  (K => 6),
  (L => 18),
  (M => 30),
  (N => 15),
  (O => 3),
  (P => 4),
  (R => 4),
  (S => 38),
  (T => 22),
  (U => 4),
  (V => 5),
  (W => 2),
  (Z => 8),
  ([ => 35),
  (\ => 36),
  (] => 35),
  (_ => 31),
  (` => 2),
  (a => 220),
  (b => 34),
  (c => 111),
  (d => 78),
  (e => 377),
  (f => 60),
  (g => 42),
  (h => 68),
  (i => 259),
  (j => 15),
  (k => 21),
  (l => 177),
  (m => 99),
  (n => 257),
  (o => 174),
  (p => 149),
  (q => 21),
  (r => 258),
  (s => 216),
  (t => 345),
  (u => 71),
  (v => 34),
  (w => 17),
  (x => 40),
  (y => 41),
  (z => 9),
  ({ => 36),
  (} => 36)
)



========================================================================================================================
=== Chapter 14. Pattern Matching and Case Classes ======================================================================

--- Chapter 14 Exercise 1 ----------------------------------------------------------------------------------------------

--- Chapter 14 Exercise 2 ----------------------------------------------------------------------------------------------
swap((1,2)) = (2,1)

--- Chapter 14 Exercise 3 ----------------------------------------------------------------------------------------------
swap(()) = ()
swap((1)) = (1)
swap((1, 2)) = (2, 1)
swap((1, 2, 3)) = (2, 1, 3)

--- Chapter 14 Exercise 4 ----------------------------------------------------------------------------------------------
price(Bundle(bundle,3.0,WrappedArray(Article(pizza,16.0), Multiple(3,Article(French fries,4.0))))) = 25.0

--- Chapter 14 Exercise 5 ----------------------------------------------------------------------------------------------
leafSum(List(List(3, 8), 2, List(5))) = 18

--- Chapter 14 Exercise 6 ----------------------------------------------------------------------------------------------
leafSum(Node(Node(Leaf(3),Leaf(8)),Node(Leaf(2),Leaf(5)))) = 18

--- Chapter 14 Exercise 7 ----------------------------------------------------------------------------------------------
leafSum(Node(WrappedArray(Node(WrappedArray(Leaf(3), Leaf(8))), Leaf(2), Node(WrappedArray(Leaf(5)))))) = 18

--- Chapter 14 Exercise 8 ----------------------------------------------------------------------------------------------
eval(Op(+,WrappedArray(Op(*,WrappedArray(Leaf(3), Leaf(8))), Leaf(2), Op(-,WrappedArray(Leaf(5)))))) = 21

eval(Op(+,WrappedArray(Op(!,WrappedArray(Op(%,WrappedArray(Leaf(8), Leaf(3))))), Op(*,WrappedArray(Leaf(2), Op(/,WrappedArray(Leaf(19), Leaf(3)))))))) = 14

eval(Op(-,WrappedArray(Op(!,WrappedArray(Op(%,WrappedArray(Leaf(8), Leaf(3))))), Op(*,WrappedArray(Leaf(2), Op(/,WrappedArray(Leaf(19), Leaf(3))))), Leaf(1)))) caused this error:
  java.lang.IllegalArgumentException: Operation '-' with 3 arguments is not supported


--- Chapter 14 Exercise 9 ----------------------------------------------------------------------------------------------
With sumVersion0:
sumVersion0(List(Some(1), None, Some(2))) = 3
sumVersion0(List(None, None)) = 0
sumVersion0(List()) = 0

With sumVersion1:
sumVersion1(List(Some(1), None, Some(2))) = 3
sumVersion1(List(None, None)) = 0
sumVersion1(List()) = 0


--- Chapter 14 Exercise 10 ---------------------------------------------------------------------------------------------
h(2) = Some(1.0)
h(1) = None
h(0) = None



========================================================================================================================
=== Chapter 17. Futures ================================================================================================

--- Chapter 17 Exercise 1 ----------------------------------------------------------------------------------------------
-- Demonstrating behavior of given for loop:
thread 22 @ 19:47:30.522 with retval = 2 starting
thread 22 @ 19:47:30.558 with retval = 2 ending after about 30 millisecs
thread 22 @ 19:47:30.559 with retval = 40 starting

thread 23 @ 19:47:30.588 with retval = 2 starting
thread 22 @ 19:47:30.591 with retval = 40 ending after about 30 millisecs
thread 22 @ 19:47:30.592: total = 42
thread 23 @ 19:47:30.623 with retval = 2 ending after about 30 millisecs
thread 22 @ 19:47:30.624 with retval = 40 starting
thread 22 @ 19:47:30.654 with retval = 40 ending after about 30 millisecs
thread 22 @ 19:47:30.655: total = 42

thread 22 @ 19:47:30.679 with retval = 2 starting
thread 22 @ 19:47:30.710 with retval = 2 ending after about 30 millisecs
thread 23 @ 19:47:30.712 with retval = 40 starting
thread 23 @ 19:47:30.745 with retval = 40 ending after about 30 millisecs
thread 23 @ 19:47:30.745: total = 42

thread 23 @ 19:47:30.769 with retval = 2 starting
thread 23 @ 19:47:30.803 with retval = 2 ending after about 30 millisecs
thread 22 @ 19:47:30.803 with retval = 40 starting
thread 22 @ 19:47:30.837 with retval = 40 ending after about 30 millisecs
thread 22 @ 19:47:30.838: total = 42

thread 22 @ 19:47:30.863 with retval = 2 starting
thread 22 @ 19:47:30.895 with retval = 2 ending after about 30 millisecs
thread 22 @ 19:47:30.896 with retval = 40 starting
thread 22 @ 19:47:30.928 with retval = 40 ending after about 30 millisecs
thread 22 @ 19:47:30.928: total = 42

thread 22 @ 19:47:30.956 with retval = 2 starting
thread 22 @ 19:47:30.987 with retval = 2 ending after about 30 millisecs
thread 22 @ 19:47:30.988 with retval = 40 starting
thread 22 @ 19:47:31.023 with retval = 40 ending after about 30 millisecs
thread 22 @ 19:47:31.023: total = 42

thread 22 @ 19:47:31.049 with retval = 2 starting
thread 22 @ 19:47:31.084 with retval = 2 ending after about 30 millisecs
thread 25 @ 19:47:31.085 with retval = 40 starting
thread 25 @ 19:47:31.116 with retval = 40 ending after about 30 millisecs
thread 25 @ 19:47:31.117: total = 42

thread 25 @ 19:47:31.143 with retval = 2 starting
thread 25 @ 19:47:31.177 with retval = 2 ending after about 30 millisecs
thread 25 @ 19:47:31.177 with retval = 40 starting
thread 25 @ 19:47:31.208 with retval = 40 ending after about 30 millisecs
thread 25 @ 19:47:31.209: total = 42

thread 25 @ 19:47:31.238 with retval = 2 starting
thread 25 @ 19:47:31.271 with retval = 2 ending after about 30 millisecs
thread 25 @ 19:47:31.271 with retval = 40 starting
thread 25 @ 19:47:31.302 with retval = 40 ending after about 30 millisecs
thread 25 @ 19:47:31.302: total = 42

thread 25 @ 19:47:31.328 with retval = 2 starting
thread 25 @ 19:47:31.358 with retval = 2 ending after about 30 millisecs
thread 22 @ 19:47:31.359 with retval = 40 starting
thread 22 @ 19:47:31.391 with retval = 40 ending after about 30 millisecs
thread 22 @ 19:47:31.391: total = 42

-- Demonstrating behavior of translation with flatMap and map:
thread 25 @ 19:47:31.419 with retval = 2 starting
thread 25 @ 19:47:31.454 with retval = 2 ending after about 30 millisecs
thread 22 @ 19:47:31.455 with retval = 40 starting
thread 22 @ 19:47:31.491 with retval = 40 ending after about 30 millisecs
thread 22 @ 19:47:31.491: total = 42

thread 22 @ 19:47:31.517 with retval = 2 starting
thread 22 @ 19:47:31.552 with retval = 2 ending after about 30 millisecs
thread 25 @ 19:47:31.552 with retval = 40 starting
thread 25 @ 19:47:31.586 with retval = 40 ending after about 30 millisecs
thread 25 @ 19:47:31.588: total = 42

thread 25 @ 19:47:31.609 with retval = 2 starting
thread 25 @ 19:47:31.643 with retval = 2 ending after about 30 millisecs
thread 22 @ 19:47:31.644 with retval = 40 starting
thread 22 @ 19:47:31.678 with retval = 40 ending after about 30 millisecs
thread 22 @ 19:47:31.679: total = 42

thread 22 @ 19:47:31.702 with retval = 2 starting
thread 22 @ 19:47:31.735 with retval = 2 ending after about 30 millisecs
thread 25 @ 19:47:31.736 with retval = 40 starting
thread 25 @ 19:47:31.769 with retval = 40 ending after about 30 millisecs
thread 25 @ 19:47:31.769: total = 42

thread 25 @ 19:47:31.795 with retval = 2 starting
thread 25 @ 19:47:31.828 with retval = 2 ending after about 30 millisecs
thread 22 @ 19:47:31.829 with retval = 40 starting
thread 22 @ 19:47:31.859 with retval = 40 ending after about 30 millisecs
thread 22 @ 19:47:31.859: total = 42

thread 22 @ 19:47:31.890 with retval = 2 starting
thread 22 @ 19:47:31.925 with retval = 2 ending after about 30 millisecs
thread 25 @ 19:47:31.926 with retval = 40 starting
thread 25 @ 19:47:31.958 with retval = 40 ending after about 30 millisecs
thread 25 @ 19:47:31.959: total = 42

thread 25 @ 19:47:31.981 with retval = 2 starting
thread 25 @ 19:47:32.012 with retval = 2 ending after about 30 millisecs
thread 22 @ 19:47:32.013 with retval = 40 starting
thread 22 @ 19:47:32.046 with retval = 40 ending after about 30 millisecs
thread 22 @ 19:47:32.046: total = 42

thread 22 @ 19:47:32.072 with retval = 2 starting
thread 22 @ 19:47:32.107 with retval = 2 ending after about 30 millisecs
thread 25 @ 19:47:32.107 with retval = 40 starting
thread 25 @ 19:47:32.142 with retval = 40 ending after about 30 millisecs
thread 25 @ 19:47:32.143: total = 42

thread 25 @ 19:47:32.167 with retval = 2 starting
thread 25 @ 19:47:32.202 with retval = 2 ending after about 30 millisecs
thread 22 @ 19:47:32.203 with retval = 40 starting
thread 22 @ 19:47:32.234 with retval = 40 ending after about 30 millisecs
thread 22 @ 19:47:32.234: total = 42

thread 22 @ 19:47:32.260 with retval = 2 starting
thread 22 @ 19:47:32.295 with retval = 2 ending after about 30 millisecs
thread 25 @ 19:47:32.295 with retval = 40 starting
thread 25 @ 19:47:32.330 with retval = 40 ending after about 30 millisecs
thread 25 @ 19:47:32.331: total = 42

The two futures and the combination of their results are executed sequentially in 3 different threads.

--- Chapter 17 Exercises 2, 3 together ---------------------------------------------------------------------------------
Await.result(doInOrder(delay((_: String).length), delay((_: Int) * 2))("TEST"), waitDur) = 8
Await.result(chainFutures(delay((_: Int) + 3), delay(100 % (_: Int)), delay((i: Int) => i * i))(10), waitDur) = 81
Await.result(chainFutures(Seq(delay((_: Int) + 3), delay(100 % (_: Int)), delay((i: Int) => i * i)): _*)(10), waitDur) = 81

--- Chapter 17 Exercise 4 ----------------------------------------------------------------------------------------------
Await.result(doTogether(delay((_: String).length), delay((_: String) * 2))("TEST"), waitDur) = (4,TESTTEST)

--- Chapter 17 Exercise 5 ----------------------------------------------------------------------------------------------
Await.result(parallelFutures(delayed(1), delayed(2), delayed(3)), waitDur) = ArrayBuffer(1, 2, 3)
Await.result(parallelFutures(Seq(delayed(1), delayed(2), delayed(3)): _*), waitDur) = List(1, 2, 3)

--- Chapter 17 Exercise 6 ----------------------------------------------------------------------------------------------
password: > secr
password: > secre
password: > secret
You have found the correct password 'secret'.

--- Chapter 17 Exercise 7 ----------------------------------------------------------------------------------------------
thread 23 @ 19:47:46.634: NumericRange 27 to 52 => count = 6
thread 22 @ 19:47:46.634: NumericRange 79 to 103 => count = 6
thread 24 @ 19:47:46.635: NumericRange 1 to 26 => count = 9
thread 25 @ 19:47:46.636: NumericRange 53 to 78 => count = 6
Among the first 103 integers, 27 are probably primes.

WORK IN PROGRESS


========================================================================================================================
=== Chapters executed: =================================================================================================
Chapter 1. The Basics
Chapter 2. Control Structures and Functions
Chapter 3. Working with Arrays
Chapter 4. Maps and Tuples
Chapter 5. Classes
Chapter 6. Objects
Chapter 7. Packages and Imports
Chapter 8. Inheritance
Chapter 9. Files and Regular Expressions
Chapter 10. Traits
Chapter 11. Operators
Chapter 12. Higher-Order Functions
Chapter 13. Collections
Chapter 14. Pattern Matching and Case Classes
Chapter 17. Futures

Process finished with exit code 0
