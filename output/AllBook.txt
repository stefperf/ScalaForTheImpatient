/Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/bin/java -javaagent:/Applications/IntelliJ IDEA CE.app/Contents/lib/idea_rt.jar=65364:/Applications/IntelliJ IDEA CE.app/Contents/bin -Dfile.encoding=UTF-8 -classpath /Users/Stefano/Documents/GitHub/ScalaForTheImpatient/target/scala-2.12/classes:/Users/Stefano/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.12.14/scala-library-2.12.14.jar com.stefperf.impatient.AllBook
========================================================================================================================
=== Chapter 1. The Basics ==============================================================================================

Most exercises of this chapter are skipped here as they are just theory questions or REPL exercises.

--- Chapter 1 Exercise 2 -----------------------------------------------------------------------------------------------
3 - (3 ^ 0.5) ^ 2 = 4.440892098500626E-16

--- Chapter 1 Exercise 6 -----------------------------------------------------------------------------------------------
2 ^1024 = 179769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137216

--- Chapter 1 Exercise 7 -----------------------------------------------------------------------------------------------
833689964427245677528080781801

--- Chapter 1 Exercise 8 -----------------------------------------------------------------------------------------------
10 random charachers in range [a-z0-9]: 17axbyjhmy

--- Chapter 1 Exercise 9 -----------------------------------------------------------------------------------------------
First and last characters of string 'Hello!': 'H', '!'



========================================================================================================================
=== Chapter 2. Control Structures and Functions ========================================================================

--- Chapter 2 Exercise 1 -----------------------------------------------------------------------------------------------
0

--- Chapter 2 Exercises 4, 5 together ----------------------------------------------------------------------------------
10
9
8
7
6
5
4
3
2
1
0

--- Chapter 2 Exercise 6 -----------------------------------------------------------------------------------------------
9415087488

--- Chapter 2 Exercises 7, 8 together ----------------------------------------------------------------------------------
9415087488

--- Chapter 2 Exercise 9 -----------------------------------------------------------------------------------------------
9415087488

--- Chapter 2 Exercise 10 ----------------------------------------------------------------------------------------------
(2.718281828459045,0.25,1000.0)

--- Chapter 2 Exercise 11 ----------------------------------------------------------------------------------------------
2021-09-25




========================================================================================================================
=== Chapter 3. Working with Arrays =====================================================================================

--- Chapter 3 Exercise 1 -----------------------------------------------------------------------------------------------
(2, 1, 2)
(2, 2, 2, 0, 1, 0, 2, 0)

--- Chapter 3 Exercise 2 -----------------------------------------------------------------------------------------------
(2, 1, 4, 3, 5)

--- Chapter 3 Exercise 3 -----------------------------------------------------------------------------------------------
(2, 1, 4, 3, 5)
(2, 1, 4, 3, 5)

--- Chapter 3 Exercise 4 -----------------------------------------------------------------------------------------------
(4, 5, 4, 2, 0, -2, -7, -1, -1, -7)

--- Chapter 3 Exercise 5 -----------------------------------------------------------------------------------------------
27.75

--- Chapter 3 Exercise 6 -----------------------------------------------------------------------------------------------
(5, 4, 3, 2, 1)
(5, 4, 3, 2, 1)
(5, 4, 3, 2, 1)
(5, 4, 3, 2, 1)

--- Chapter 3 Exercise 7 -----------------------------------------------------------------------------------------------
(0, 0, 1, 0, 4, 1, 2, 5, 1, 4, 3, 5, 2, 1, 3, 5, 0, 1, 1, 1)
(0, 1, 4, 2, 5, 3)

--- Chapter 3 Exercise 8 -----------------------------------------------------------------------------------------------
(4, 2, -3, -6, 6, 7, -5)
(4, 2, -3, 6, 7)

--- Chapter 3 Exercise 9 -----------------------------------------------------------------------------------------------
(4, 2, -3, -6, 6, 7, -5) => (4, 2, -3, 6, 7, 7, -5)
() => ()
(-1, -2, -3, -4) => (-1, -2, -3, -4)
(1, 2, 3, 4) => (1, 2, 3, 4)
(1, 2, 3, -4, -5) => (1, 2, 3, -4, -5)
(-1, -2, -3, 4, 5) => (-1, 4, 5, 4, 5)

--- Chapter 3 Exercise 10 ----------------------------------------------------------------------------------------------
Adak
Anchorage
Anguilla
Antigua
Araguaina
Argentina/Buenos_Aires
Argentina/Catamarca
Argentina/ComodRivadavia
Argentina/Cordoba
Argentina/Jujuy
Argentina/La_Rioja
Argentina/Mendoza
Argentina/Rio_Gallegos
Argentina/Salta
Argentina/San_Juan
Argentina/San_Luis
Argentina/Tucuman
Argentina/Ushuaia
Aruba
Asuncion
Atikokan
Atka
Bahia
Bahia_Banderas
Barbados
Belem
Belize
Blanc-Sablon
Boa_Vista
Bogota
Boise
Buenos_Aires
Cambridge_Bay
Campo_Grande
Cancun
Caracas
Catamarca
Cayenne
Cayman
Chicago
Chihuahua
Coral_Harbour
Cordoba
Costa_Rica
Creston
Cuiaba
Curacao
Danmarkshavn
Dawson
Dawson_Creek
Denver
Detroit
Dominica
Edmonton
Eirunepe
El_Salvador
Ensenada
Fort_Nelson
Fort_Wayne
Fortaleza
Glace_Bay
Godthab
Goose_Bay
Grand_Turk
Grenada
Guadeloupe
Guatemala
Guayaquil
Guyana
Halifax
Havana
Hermosillo
Indiana/Indianapolis
Indiana/Knox
Indiana/Marengo
Indiana/Petersburg
Indiana/Tell_City
Indiana/Vevay
Indiana/Vincennes
Indiana/Winamac
Indianapolis
Inuvik
Iqaluit
Jamaica
Jujuy
Juneau
Kentucky/Louisville
Kentucky/Monticello
Knox_IN
Kralendijk
La_Paz
Lima
Los_Angeles
Louisville
Lower_Princes
Maceio
Managua
Manaus
Marigot
Martinique
Matamoros
Mazatlan
Mendoza
Menominee
Merida
Metlakatla
Mexico_City
Miquelon
Moncton
Monterrey
Montevideo
Montreal
Montserrat
Nassau
New_York
Nipigon
Nome
Noronha
North_Dakota/Beulah
North_Dakota/Center
North_Dakota/New_Salem
Nuuk
Ojinaga
Panama
Pangnirtung
Paramaribo
Phoenix
Port-au-Prince
Port_of_Spain
Porto_Acre
Porto_Velho
Puerto_Rico
Punta_Arenas
Rainy_River
Rankin_Inlet
Recife
Regina
Resolute
Rio_Branco
Rosario
Santa_Isabel
Santarem
Santiago
Santo_Domingo
Sao_Paulo
Scoresbysund
Shiprock
Sitka
St_Barthelemy
St_Johns
St_Kitts
St_Lucia
St_Thomas
St_Vincent
Swift_Current
Tegucigalpa
Thule
Thunder_Bay
Tijuana
Toronto
Tortola
US/Alaska
US/Aleutian
US/Arizona
US/Central
US/East-Indiana
US/Eastern
US/Hawaii
US/Indiana-Starke
US/Michigan
US/Mountain
US/Pacific
US/Samoa
Vancouver
Virgin
Whitehorse
Winnipeg
Yakutat
Yellowknife

--- Chapter 3 Exercise 11 ----------------------------------------------------------------------------------------------
val nativesForImageFlavor = Map[DataFlavor, String](
  (java.awt.datatransfer.DataFlavor[mimetype=image/x-java-image;representationclass=java.awt.Image] => PNG)
)



========================================================================================================================
=== Chapter 4. Maps and Tuples =========================================================================================

--- Chapter 4 Exercise 1 -----------------------------------------------------------------------------------------------
discountedPRices =
(
  (product1 => 90.0),
  (product2 => 180.0),
  (product3 => 44.99),
  (product4 => 17999.91)
)

--- Chapter 4 Exercise 2 -----------------------------------------------------------------------------------------------
Top 5 most frequent 'words' in this file:
(
  (word => 32),
  (val => 30),
  (wordCounts => 17),
  (in => 16),
  (Int => 15)
)

--- Chapter 4 Exercise 3 -----------------------------------------------------------------------------------------------
Top 5 most frequent 'words' in this file:
(
  (word => 32),
  (val => 30),
  (wordCounts => 17),
  (in => 16),
  (println => 15)
)

--- Chapter 4 Exercise 4 -----------------------------------------------------------------------------------------------
(
  (Array => 4),
  (Boolean => 2),
  (Calendar => 8),
  (Chapter => 6),
  (Char => 1),
  (Double => 1),
  (FRIDAY => 1),
  (File => 4),
  (Friday => 1),
  (Hello => 4),
  (Int => 15),
  (JavaConverters => 2),
  (LinkedHashMap => 1),
  (ListMap => 2),
  (MONDAY => 1),
  (Map => 6),
  (Maps => 1),
  (Monday => 1),
  (SATURDAY => 1),
  (SUNDAY => 1),
  (Saturday => 1),
  (Scanner => 4),
  (SortedMap => 1),
  (Stefano => 1),
  (String => 13),
  (Sunday => 1),
  (System => 1),
  (THURSDAY => 1),
  (TUESDAY => 1),
  (Thursday => 1),
  (Top => 2),
  (TreeMap => 1),
  (Tuesday => 1),
  (Tuples => 1),
  (Unit => 1),
  (Use => 1),
  (WEDNESDAY => 1),
  (Wednesday => 1),
  (Words => 3),
  (World => 1),
  (Z => 4),
  (a => 4),
  (and => 6),
  (arr => 6),
  (array => 2),
  (arrmax => 4),
  (arrmin => 4),
  (as => 1),
  (asScala => 2),
  (at => 1),
  (case => 4),
  (caseSensitive => 6),
  (chapter => 5),
  (charAggregate => 8),
  (collection => 5),
  (com => 6),
  (contain => 1),
  (counts => 1),
  (cs => 4),
  (def => 5),
  (discountPerc => 2),
  (discountedPRices => 1),
  (discountedPrices => 2),
  (drop => 1),
  (element => 1),
  (else => 5),
  (eq => 3),
  (equal => 1),
  (exercise => 10),
  (exercises => 1),
  (extends => 1),
  (f => 9),
  (false => 2),
  (file => 2),
  (findAllMatchIn => 4),
  (findOverlaps => 2),
  (finding => 1),
  (for => 10),
  (foreach => 1),
  (frequent => 2),
  (fullPrices => 2),
  (get => 1),
  (getOrElse => 4),
  (getProperties => 1),
  (greater => 1),
  (gt => 3),
  (hasNext => 4),
  (have => 3),
  (hollow => 2),
  (i => 2),
  (if => 11),
  (immutable => 4),
  (impatient => 6),
  (import => 5),
  (in => 16),
  (io => 4),
  (isEmpty => 1),
  (java => 10),
  (k => 7),
  (keys => 1),
  (largest => 1),
  (least => 1),
  (length => 3),
  (less => 1),
  (let => 5),
  (letter => 7),
  (letters => 1),
  (line => 2),
  (lt => 3),
  (lteqgt => 2),
  (main => 4),
  (map => 4),
  (max => 2),
  (maxNameLength => 4),
  (min => 1),
  (minmax => 2),
  (most => 2),
  (must => 1),
  (mutable => 5),
  (n => 8),
  (new => 9),
  (next => 4),
  (no => 1),
  (nr => 1),
  (object => 1),
  (of => 1),
  (or => 1),
  (overlap => 2),
  (overlapping => 1),
  (overlaps => 5),
  (override => 1),
  (package => 1),
  (pathname => 8),
  (pos => 2),
  (position => 4),
  (printOverlaps => 5),
  (println => 15),
  (printmap => 6),
  (product => 4),
  (props => 3),
  (r => 4),
  (raw => 4),
  (replace => 1),
  (require => 1),
  (round => 1),
  (same => 6),
  (scala => 13),
  (seq => 2),
  (size => 1),
  (smallest => 1),
  (sortBy => 3),
  (src => 4),
  (stefperf => 6),
  (take => 2),
  (than => 2),
  (the => 3),
  (these => 1),
  (this => 3),
  (to => 1),
  (toMap => 1),
  (toSeq => 3),
  (toString => 4),
  (toUpperCase => 2),
  (true => 1),
  (util => 6),
  (v => 13),
  (va => 3),
  (val => 30),
  (value => 1),
  (values => 8),
  (var => 6),
  (w => 6),
  (weekdayToCode => 9),
  (while => 4),
  (with => 1),
  (without => 1),
  (word => 32),
  (wordCounts => 17),
  (wordRegex => 8),
  (words => 2),
  (yield => 2),
  (zA => 4),
  (zip => 1),
  (zipWithIndex => 1)
)

--- Chapter 4 Exercise 5 -----------------------------------------------------------------------------------------------
(
  (Array => 4),
  (Boolean => 2),
  (Calendar => 8),
  (Chapter => 6),
  (Char => 1),
  (Double => 1),
  (FRIDAY => 1),
  (File => 4),
  (Friday => 1),
  (Hello => 4),
  (Int => 15),
  (JavaConverters => 2),
  (LinkedHashMap => 1),
  (ListMap => 2),
  (MONDAY => 1),
  (Map => 6),
  (Maps => 1),
  (Monday => 1),
  (SATURDAY => 1),
  (SUNDAY => 1),
  (Saturday => 1),
  (Scanner => 4),
  (SortedMap => 1),
  (Stefano => 1),
  (String => 13),
  (Sunday => 1),
  (System => 1),
  (THURSDAY => 1),
  (TUESDAY => 1),
  (Thursday => 1),
  (Top => 2),
  (TreeMap => 1),
  (Tuesday => 1),
  (Tuples => 1),
  (Unit => 1),
  (Use => 1),
  (WEDNESDAY => 1),
  (Wednesday => 1),
  (Words => 3),
  (World => 1),
  (Z => 4),
  (a => 4),
  (and => 6),
  (arr => 6),
  (array => 2),
  (arrmax => 4),
  (arrmin => 4),
  (as => 1),
  (asScala => 2),
  (at => 1),
  (case => 4),
  (caseSensitive => 6),
  (chapter => 5),
  (charAggregate => 8),
  (collection => 5),
  (com => 6),
  (contain => 1),
  (counts => 1),
  (cs => 4),
  (def => 5),
  (discountPerc => 2),
  (discountedPRices => 1),
  (discountedPrices => 2),
  (drop => 1),
  (element => 1),
  (else => 5),
  (eq => 3),
  (equal => 1),
  (exercise => 10),
  (exercises => 1),
  (extends => 1),
  (f => 9),
  (false => 2),
  (file => 2),
  (findAllMatchIn => 4),
  (findOverlaps => 2),
  (finding => 1),
  (for => 10),
  (foreach => 1),
  (frequent => 2),
  (fullPrices => 2),
  (get => 1),
  (getOrElse => 4),
  (getProperties => 1),
  (greater => 1),
  (gt => 3),
  (hasNext => 4),
  (have => 3),
  (hollow => 2),
  (i => 2),
  (if => 11),
  (immutable => 4),
  (impatient => 6),
  (import => 5),
  (in => 16),
  (io => 4),
  (isEmpty => 1),
  (java => 10),
  (k => 7),
  (keys => 1),
  (largest => 1),
  (least => 1),
  (length => 3),
  (less => 1),
  (let => 5),
  (letter => 7),
  (letters => 1),
  (line => 2),
  (lt => 3),
  (lteqgt => 2),
  (main => 4),
  (map => 4),
  (max => 2),
  (maxNameLength => 4),
  (min => 1),
  (minmax => 2),
  (most => 2),
  (must => 1),
  (mutable => 5),
  (n => 8),
  (new => 9),
  (next => 4),
  (no => 1),
  (nr => 1),
  (object => 1),
  (of => 1),
  (or => 1),
  (overlap => 2),
  (overlapping => 1),
  (overlaps => 5),
  (override => 1),
  (package => 1),
  (pathname => 8),
  (pos => 2),
  (position => 4),
  (printOverlaps => 5),
  (println => 15),
  (printmap => 6),
  (product => 4),
  (props => 3),
  (r => 4),
  (raw => 4),
  (replace => 1),
  (require => 1),
  (round => 1),
  (same => 6),
  (scala => 13),
  (seq => 2),
  (size => 1),
  (smallest => 1),
  (sortBy => 3),
  (src => 4),
  (stefperf => 6),
  (take => 2),
  (than => 2),
  (the => 3),
  (these => 1),
  (this => 3),
  (to => 1),
  (toMap => 1),
  (toSeq => 3),
  (toString => 4),
  (toUpperCase => 2),
  (true => 1),
  (util => 6),
  (v => 13),
  (va => 3),
  (val => 30),
  (value => 1),
  (values => 8),
  (var => 6),
  (w => 6),
  (weekdayToCode => 9),
  (while => 4),
  (with => 1),
  (without => 1),
  (word => 32),
  (wordCounts => 17),
  (wordRegex => 8),
  (words => 2),
  (yield => 2),
  (zA => 4),
  (zip => 1),
  (zipWithIndex => 1)
)

--- Chapter 4 Exercise 6 -----------------------------------------------------------------------------------------------
(
  (Monday => 2),
  (Tuesday => 3),
  (Wednesday => 4),
  (Thursday => 5),
  (Friday => 6),
  (Saturday => 7),
  (Sunday => 1)
)

--- Chapter 4 Exercise 7 -----------------------------------------------------------------------------------------------
awt.toolkit                     | sun.lwawt.macosx.LWCToolkit
file.encoding                   | UTF-8
file.separator                  | /
ftp.nonProxyHosts               | local|*.local|169.254/16|*.169.254/16
gopherProxySet                  | false
http.nonProxyHosts              | local|*.local|169.254/16|*.169.254/16
java.awt.graphicsenv            | sun.awt.CGraphicsEnvironment
java.awt.printerjob             | sun.lwawt.macosx.CPrinterJob
java.class.path                 | /Users/Stefano/Documents/GitHub/ScalaForTheImpatient/target/scala-2.12/classes:/Users/Stefano/Library/Caches/Coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.12.14/scala-library-2.12.14.jar
java.class.version              | 55.0
java.home                       | /Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home
java.io.tmpdir                  | /var/folders/vt/xh6vj3q915s06wdh7kvwf3f40000gn/T/
java.library.path               | /Users/Stefano/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
java.runtime.name               | OpenJDK Runtime Environment
java.runtime.version            | 11.0.12+7
java.specification.name         | Java Platform API Specification
java.specification.vendor       | Oracle Corporation
java.specification.version      | 11
java.vendor                     | Eclipse Foundation
java.vendor.url                 | https://adoptium.net/
java.vendor.url.bug             | https://github.com/adoptium/adoptium-support/issues
java.vendor.version             | Temurin-11.0.12+7
java.version                    | 11.0.12
java.version.date               | 2021-07-20
java.vm.compressedOopsMode      | Zero based
java.vm.info                    | mixed mode
java.vm.name                    | OpenJDK 64-Bit Server VM
java.vm.specification.name      | Java Virtual Machine Specification
java.vm.specification.vendor    | Oracle Corporation
java.vm.specification.version   | 11
java.vm.vendor                  | Eclipse Foundation
java.vm.version                 | 11.0.12+7
jdk.debug                       | release
line.separator                  | \n
os.arch                         | x86_64
os.name                         | Mac OS X
os.version                      | 10.16
path.separator                  | :
socksNonProxyHosts              | local|*.local|169.254/16|*.169.254/16
sun.arch.data.model             | 64
sun.awt.enableExtraMouseButtons | true
sun.boot.library.path           | /Library/Java/JavaVirtualMachines/temurin-11.jdk/Contents/Home/lib
sun.cpu.endian                  | little
sun.cpu.isalist                 |
sun.font.fontmanager            | sun.font.CFontManager
sun.io.unicode.encoding         | UnicodeBig
sun.java.command                | com.stefperf.impatient.AllBook
sun.java.launcher               | SUN_STANDARD
sun.jnu.encoding                | UTF-8
sun.management.compiler         | HotSpot 64-Bit Tiered Compilers
sun.os.patch.level              | unknown
user.country                    | US
user.dir                        | /Users/Stefano/Documents/GitHub/ScalaForTheImpatient
user.home                       | /Users/Stefano
user.language                   | en
user.name                       | Stefano
user.timezone                   | Europe/Zurich

--- Chapter 4 Exercise 8 -----------------------------------------------------------------------------------------------
(1, 4, 8, 2, 5, 0, 7, 4, 5) => (0,8)

--- Chapter 4 Exercise 9 -----------------------------------------------------------------------------------------------
(1, 4, 8, 2, 5, 0, 7, 4, 5) => (3,2,4)

--- Chapter 4 Exercise 10 ----------------------------------------------------------------------------------------------
Use case: finding overlapping letters in the same position, with or without the same letter case.

Words 'Hello' and 'Stefano' have no same-position letter overlap.

Words 'Hello' and 'World' have this same-position letter overlap:
'L' as letter nr. 4

Words 'Hello' and 'hollow' have these same-position letter overlaps:
'H' as letter nr. 1
'L' as letter nr. 3
'L' as letter nr. 4
'O' as letter nr. 5

Words 'Hello' and 'hollow' have these same-position, same-case letter overlaps:
'l' as letter nr. 3
'l' as letter nr. 4
'o' as letter nr. 5



========================================================================================================================
=== Chapter 5. Classes =================================================================================================

--- Chapter 5 Exercise 1 -----------------------------------------------------------------------------------------------
saferCounter.increment() threw: 'integer overflow prevented'
counter -> -2147483648, saferCounter -> 2147483647

--- Chapter 5 Exercise 2 -----------------------------------------------------------------------------------------------
current bank account balance = 6000.0

--- Chapter 5 Exercise 3 -----------------------------------------------------------------------------------------------
09:45 before 10:05 => true

--- Chapter 5 Exercise 4 -----------------------------------------------------------------------------------------------
09:45 before 10:05 => true

--- Chapter 5 Exercise 5 -----------------------------------------------------------------------------------------------
13

--- Chapter 5 Exercise 6 -----------------------------------------------------------------------------------------------
Person(inputAge = -3).age = 0

--- Chapter 5 Exercise 7 -----------------------------------------------------------------------------------------------
first name = Stefano
last name = Perfetti

--- Chapter 5 Exercise 8 -----------------------------------------------------------------------------------------------
Tesla Model T -1
Tesla Model T 2021
Tesla Model T -1 1234567
Tesla Model T 2021 1234567

--- Chapter 5 Exercise 10 ----------------------------------------------------------------------------------------------
e: name = John Q. Public, salary = 0.0
e: name = Stefano, salary = 10000.0



========================================================================================================================
=== Chapter 6. Objects =================================================================================================

--- Chapter 6 Exercise 1 -----------------------------------------------------------------------------------------------
100.0 mile = 160.934 kilometer
12.5 gallon = 47.317625 liter
42.0 inch = 106.68 centimeter

--- Chapter 6 Exercise 2 -----------------------------------------------------------------------------------------------
100.0 mile = 160.934 kilometer
12.5 gallon = 47.317625 liter
42.0 inch = 106.68 centimeter

--- Chapter 6 Exercise 3 -----------------------------------------------------------------------------------------------
Origin = (x=3, y=4

--- Chapter 6 Exercise 4 -----------------------------------------------------------------------------------------------
new Point(3, 4) = (x=3.0, y=4.0)
Point(3, 4) = (x=3.0, y=4.0)

--- Chapter 6 Exercise 5 -----------------------------------------------------------------------------------------------
reverse to arguments

--- Chapter 6 Exercise 6 -----------------------------------------------------------------------------------------------
card suit = ♥, Unicode codepoint = \u2665
card suit = ♦, Unicode codepoint = \u2666
card suit = ♣, Unicode codepoint = \u2663
card suit = ♠, Unicode codepoint = \u2660

--- Chapter 6 Exercise 7 -----------------------------------------------------------------------------------------------
card suit ♥ is red
card suit ♦ is red
card suit ♣ is black
card suit ♠ is black

--- Chapter 6 Exercise 8 -----------------------------------------------------------------------------------------------
black, 0x0
blue, 0xff
green, 0xff00
cyan, 0xffff
red, 0xff0000
magenta, 0xff00ff
yellow, 0xffff00
white, 0xffffff



========================================================================================================================
=== Chapter 7. Packages and Imports ====================================================================================

--- Chapter 7 Exercise 1 -----------------------------------------------------------------------------------------------
Object Chapter7Exercise1A can see both com.horstmann and com.horstmann.impatient members:
This is class com.horstmann.Something.
This is class com.horstmann.impatient.Something.

Object Chapter7Exercise1B cannot see com.horstmann members, but only com.horstmann.impatient members:
This is class com.horstmann.impatient.Something.


--- Chapter 7 Exercise 2 -----------------------------------------------------------------------------------------------
This block sees _root_.ScalaForTheImpatient.chapter07.horstmann instead of _root_.com.horstmann:
This is class ScalaForTheImpatient.chapter07.horstmann.Something.

--- Chapter 7 Exercise 3 -----------------------------------------------------------------------------------------------
5 random integers: 129832950 323330443 2140339228 -1447076999 -871087822
5 random doubles in [-1, +1]: -0.399 -0.304 0.236 0.508 -0.872

--- Chapter 7 Exercise 4 -----------------------------------------------------------------------------------------------
(theory answer) Package objects are a Scala 2 workaround no longer needed in Scala 3.

--- Chapter 7 Exercise 5 -----------------------------------------------------------------------------------------------
(theory answer) private[com] makes a member visible in package com and all its contained packages.
That is not useful, since com is usually the top-level package containing all others.

--- Chapter 7 Exercises 6, 7 together ----------------------------------------------------------------------------------
Java HashMap = (
  (one => 1),
  (two => 2),
  (three => 3)
)
Scala HashMap = (
  (one => 1),
  (three => 3),
  (two => 2),
  (zero => 0)
)

--- Chapter 7 Exercise 8 -----------------------------------------------------------------------------------------------
(theory answer) "import java._; import javax._" import lots of members.
That is a bad idea because it probably causes lots of name conflicts.

--- Chapter 7 Exercise 9 -----------------------------------------------------------------------------------------------
Stefano, type the password: > secret
Welcome, Stefano!

--- Chapter 7 Exercise 10 ----------------------------------------------------------------------------------------------
The package scala overrides the following members of the package java.lang:
Boolean
Byte
Cloneable
deprecated
Double
Exception
Float
Long
Process
ProcessBuilder
Short
StringBuilder
Source: https://docs.google.com/spreadsheets/d/1xyToGau13ZEQXTQh1sgbPUJNc3-NBYcrQxLigbwDU1E/edit?usp=sharing



========================================================================================================================
=== Chapter 8. Inheritance =============================================================================================

--- Chapter 8 Exercise 1 -----------------------------------------------------------------------------------------------
After 3 operations:
- the checking account balance is 7997.0
- the fee total received by the bank is 3.0

--- Chapter 8 Exercise 3 -----------------------------------------------------------------------------------------------
Source: https://www.tutorialspoint.com/cplusplus/cpp_inheritance.htm (not a great example, in truth)
Total area: 35

--- Chapter 8 Exercise 4 -----------------------------------------------------------------------------------------------
The bundle 'mouse + keyboard + mouse pad' costs 99.70 CHF.

--- Chapter 8 Exercise 5 -----------------------------------------------------------------------------------------------
Point(3.0, 4.0)
LabeledPoint('Black Thursday', 1929.0, 230.07)

--- Chapter 8 Exercise 6 -----------------------------------------------------------------------------------------------
Rectangle(topLeftCorner=Point(3.0, 4.0), width=7.0, height=10.0) => centerPoint(6.5, 9.0).
Rectangle(centerPoint=Point(5.0, 5.0), radius=5.0) => centerPoint(5.0, 5.0).

--- Chapter 8 Exercise 7 -----------------------------------------------------------------------------------------------
new Square(new Point(3, 4), 5) => Square(topLeftCorner=Point(3, 4), side=5)
new Square(5) => Square(topLeftCorner=Point(0, 0), side=5)
new Square() => Square(topLeftCorner=Point(0, 0), side=0)

--- Chapter 8 Exercise 8 -----------------------------------------------------------------------------------------------
(bytecode reverse engineering exercise) the name field is duplicated, the getter method is overridden.

--- Chapter 8 Exercise 9 -----------------------------------------------------------------------------------------------
new AntWithVal().env = (), unwanted!
new AntWithDef().env = (0, 0), as desired.
The 2nd case works correctly because it is de facto a static method, so it needs no initialization.

--- Chapter 8 Exercise 10 ----------------------------------------------------------------------------------------------
(theory answer)
A 'protected' constructor can be called only by this class (+companion object) and its subclasses.

--- Chapter 8 Exercise 11 ----------------------------------------------------------------------------------------------
Point(x = -3, y = -4)
Point(x = -3, y = 2)
Point(x = 5, y = -4)
Point(x = 5, y = 2)



========================================================================================================================
=== Chapter 9. Files and Regular Expressions ===========================================================================

--- Chapter 9 Exercise 1 -----------------------------------------------------------------------------------------------
-- File Chapter09Exercise01.txt contains:
reordered.
to be
a sentence
is
This
-- File Chapter09Exercise01LineReversed.txt contains:


--- Chapter 9 Exercise 2 -----------------------------------------------------------------------------------------------
(deliberately changing the specs for convenience' sake)
-- File Chapter09Exercise02.txt contains:
gtsegfsez	dfgdf	d			g
			dvdf	gb

		end
-- File Chapter09Exercise02TabsVisualized.txt contains:


--- Chapter 9 Exercise 3 -----------------------------------------------------------------------------------------------
-- Words with 12+ chars:
ScalaForTheImpatient
deliberately
requirements

--- Chapter 9 Exercise 4 -----------------------------------------------------------------------------------------------
-- Numbers found in file:
#1: +.1 = 0.1
#2: -1. = -1.0
#3: 2 = 2.0
#4: 3.14
#5: -15E-2 = -0.15
#6: 3.53e+03 = 3530.0
#7: .1 = 0.1
#8: 1. = 1.0
#9: 2 = 2.0
#10: 3.14
#11: 15E-02 = 0.15
#12: 3.53e03 = 3530.0
-- Stats:
max = 3530.000
avg = 589.207
sum = 7070.480
min = -1.000

--- Chapter 9 Exercise 5 -----------------------------------------------------------------------------------------------
-- File contents:
      1          1.0
      2          0.5
      4          0.25
      8          0.125
     16          0.0625
     32          0.03125
     64          0.015625
    128          0.0078125
    256          0.00390625
    512          0.001953125
   1024          9.765625E-4
   2048          4.8828125E-4
   4096          2.44140625E-4
   8192          1.220703125E-4
  16384          6.103515625E-5
  32768          3.0517578125E-5
  65536          1.52587890625E-5
 131072          7.62939453125E-6
 262144          3.814697265625E-6
 524288          1.9073486328125E-6
1048576          9.5367431640625E-7


--- Chapter 9 Exercise 6 -----------------------------------------------------------------------------------------------
Quoted strings found in file:
"Hello, World!"
""
"\""
"a\"b"
"cd\\"

--- Chapter 9 Exercise 7 -----------------------------------------------------------------------------------------------
these
are
not
floating
point
numbers
3.14these
are-15E-2
3.53eNOT+03
float1.ing
2PoInT3.14
numbers

--- Chapter 9 Exercise 8 -----------------------------------------------------------------------------------------------
Image sources on page https://horstmann.com/scala:
- images/cover.png
- http://ad.linksynergy.com/fs-bin/show?id=R/ODEl37NHE&amp;bids=163217.2476823&amp;type=2&amp;subid=0

--- Chapter 9 Exercise 9 -----------------------------------------------------------------------------------------------
30 files with extension .scala were found in ./src/main/scala.

--- Chapter 9 Exercise 10 ----------------------------------------------------------------------------------------------
- Before serialization:
Alfred's friends: Boris.
Boris's friends: Alfred, Carlo.
Carlo's friends: Boris.
- After serialization:
Alfred's friends: Boris.
Boris's friends: Alfred, Carlo.
Carlo's friends: Boris.



========================================================================================================================
=== Chapter 10. Traits =================================================================================================

--- Chapter 10 Exercise 1 ----------------------------------------------------------------------------------------------
- Behavior of java.awt.Rectangle ---
rect = java.awt.Rectangle[x=5,y=10,width=20,height=30]
...executing rect.translate(10, -10)...
rect = java.awt.Rectangle[x=15,y=0,width=20,height=30]
...executing rect.grow(10, 20)...
rect = java.awt.Rectangle[x=5,y=-20,width=40,height=70]

- Behavior of java.awt.geom.Ellipse2D ---
egg = RectangleLike[x=5.0,y=10.0,width=20.0,height=30.0]
...executing egg.translate(10, -10)...
egg = RectangleLike[x=15.0,y=0.0,width=20.0,height=30.0]
...executing egg.grow(10, 20)...
egg = RectangleLike[x=5.0,y=-20.0,width=40.0,height=70.0]

--- Chapter 10 Exercise 2 ----------------------------------------------------------------------------------------------
OrderedPoints
before sorting: ((3, 4), (3, 2), (1, 4), (3, 1), (3, 2))
after sorting:  ((1, 4), (3, 1), (3, 2), (3, 2), (3, 4))

--- Chapter 10 Exercise 3 ----------------------------------------------------------------------------------------------
skipped because it is a pure theory exercise

--- Chapter 10 Exercise 4 ----------------------------------------------------------------------------------------------
Encoding the test text 'this is the test text' with Caesar cipher = 3:
wklv#lv#wkh#whvw#wh{w
Encoding the test text 'this is the test text' with Caesar cipher = -3:
qefpfpqebqbpqqbuq

--- Chapter 10 Exercise 5 ----------------------------------------------------------------------------------------------
property 'myPoint' changed from (0,1) to (2,3)
property 'myPoint' changed from (2,3) to (4,5)
property 'myPoint' changed from (4,5) to (6,7)
property 'myPoint' changed from (6,7) to (8,9)
property 'myPoint' changed from (8,9) to (10,11)

--- Chapter 10 Exercise 6 ----------------------------------------------------------------------------------------------
skipped because it is a pure theory exercise

--- Chapter 10 Exercise 7 ----------------------------------------------------------------------------------------------
### Deposited 100.0 into account 1, new balance = 100.0
### Failed to withdraw 200.0 from account 1, balance = 100.0
(to see the point of this exercise, it is necessary to write and compile the code incrementally)
--- Chapter 10 Exercise 8 ----------------------------------------------------------------------------------------------
ReversingAnagrammer with HalfCuttingAnagrammer: GANAMAR
HalfCuttingAnagrammer with ReversingAnagrammer: ANAMARG

--- Chapter 10 Exercises 9, 10 together --------------------------------------------------------------------------------
-- Echoing file $filename one character at a time, but reading bufferSize characters at a time... --
The 0-bytes buffer '' has been exhausted; trying to read more bytes...
a
b
c
d
e
f
g
h
i
j
The 10-bytes buffer 'abcdefghij' has been exhausted; trying to read more bytes...
k
l
m
n
o
p
q
r
s
t
The 10-bytes buffer 'klmnopqrst' has been exhausted; trying to read more bytes...
u
v
w
x
y
z
The 6-bytes buffer 'uvwxyz' has been exhausted; trying to read more bytes...
The input stream has finished.

--- Chapter 10 Exercise 11 ---------------------------------------------------------------------------------------------
-- Echoing file $filename one character at a time with iterator... --
a
b
c
d
e
f
g
h
i
j
k
l
m
n
o
p
q
r
s
t
u
v
w
x
y
z

--- Chapter 10 Exercise 12 ---------------------------------------------------------------------------------------------
Skipped as it is not a coding exercise.



========================================================================================================================
=== Chapter 11. Operators ==============================================================================================

--- Chapter 11 Exercise 1 ----------------------------------------------------------------------------------------------
3 + 4 -> 5 == (3 + 4) -> 5 == (7,5), from left to right, because both operators have the same precedence.
3 + 4 -> 5 is legal only as 3 -> (4 + 5) == (3,9).

--- Chapter 11 Exercise 2 ----------------------------------------------------------------------------------------------
Operators ** or ^ for power would have an unintuitively too low precedence, based on Scala's rules.

--- Chapter 11 Exercise 3 ----------------------------------------------------------------------------------------------
2/3 + 3/4 = 17/12
2/3 - 3/4 = -1/12
2/3 * 3/4 = 1/2
2/3 / 3/4 = 8/9
2/3 + (-3/4) = -1/12
2/3 - (-3/4) = 17/12
2/3 * (-3/4) = -1/2
2/3 / (-3/4) = -8/9

--- Chapter 11 Exercise 4 ----------------------------------------------------------------------------------------------
Money(1, 75) + Money(0, 50) == Money(2, 25): true
It is at least questionable to implement operator *, as money cannot be multiplied by money.
It is at least questionable to implement operator /, as money divided by money yields a pure number.

--- Chapter 11 Exercise 5 ----------------------------------------------------------------------------------------------
println(Table() | "Java" | "Scala" || "Gosling" | "Odersky" || "JVM" | "JVM, .NET")
 ->
<table><tr><td>Java</td><td>Scala</td></tr><tr><td>Gosling</td><td>Odersky</td></tr><tr><td>JVM</td><td>JVM, .NET</td></tr></table>

--- Chapter 11 Exercise 6 ----------------------------------------------------------------------------------------------
a0 =
 /\_/\
( ' ' )
(  -  )
 | | |
(__|__)

a1 =
   -----
 / Hello \
<  Scala |
 \ Coder /
   -----

println(
  a0 << a1
     ^^
  a1 << a0
)

 ->

 /\_/\     -----
( ' ' )  / Hello \
(  -  ) <  Scala |
 | | |   \ Coder /
(__|__)    -----

   -----    /\_/\
 / Hello \ ( ' ' )
<  Scala | (  -  )
 \ Coder /  | | |
   -----   (__|__)

--- Chapter 11 Exercise 7 ----------------------------------------------------------------------------------------------
initial BitSequence contents: 0000000000000000000000000000000000000000000000000000000000000000
final BitSequence contents:   0010100010100010100010100010100010100010100010100010100010100010

--- Chapter 11 Exercise 8 ----------------------------------------------------------------------------------------------
M0 =
[[1.000, 2.000, 3.000],
 [4.000, 5.000, 6.000]]

M1 =
[[1.000, 1.000, 1.000],
 [1.000, 1.000, 1.000]]

M2 =
[[1.000, -1.000, 1.000],
 [-1.000, 1.000, -1.000]]

(M0 + M1 * 2) * M2 + 7 =
[[10.000, 3.000, 12.000],
 [1.000, 14.000, -1.000]]


--- Chapter 11 Exercise 9 ----------------------------------------------------------------------------------------------
String '  ' matches to <dir = '', filename = ''>.
String '/home/cay/readme.txt' matches to <dir = '/home/cay', filename = 'readme.txt'>.
String ' readme.txt  ' matches to <dir = '', filename = 'readme.txt'>.
String '' matches to <dir = '', filename = ''>.

--- Chapter 11 Exercise 10 ---------------------------------------------------------------------------------------------
String '  ' does not match any of the target patterns.
String '/home/cay/readme.txt' matches to <dir1 = home, dir2 = cay, filename = 'readme.txt'>.
String ' readme.txt  ' matches to <filename = 'readme.txt'>.
String '' does not match any of the target patterns.
String 'dirname/filename.ext' matches to <dir = dirname, filename = 'filename.ext'>.

--- Chapter 11 Exercise 11 ---------------------------------------------------------------------------------------------
com.stefperf.impatient.chapter11.SysProps$@73173f63

--- Chapter 11 Exercise 12 ---------------------------------------------------------------------------------------------
not implemented yet

--- Chapter 11 Exercise 13 ---------------------------------------------------------------------------------------------
not implemented yet



========================================================================================================================
=== Chapters executed: =================================================================================================
Chapter 1. The Basics
Chapter 2. Control Structures and Functions
Chapter 3. Working with Arrays
Chapter 4. Maps and Tuples
Chapter 5. Classes
Chapter 6. Objects
Chapter 7. Packages and Imports
Chapter 8. Inheritance
Chapter 9. Files and Regular Expressions
Chapter 10. Traits
Chapter 11. Operators

Process finished with exit code 0
